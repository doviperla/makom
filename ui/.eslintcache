[{"D:\\Apps\\makom\\ui\\src\\components\\Home.js":"1","D:\\Apps\\makom\\ui\\src\\utils\\constants.js":"2","D:\\Apps\\makom\\ui\\src\\index.js":"3","D:\\Apps\\makom\\ui\\src\\styles.js":"4","D:\\Apps\\makom\\ui\\src\\reportWebVitals.js":"5","D:\\Apps\\makom\\ui\\src\\App.js":"6","D:\\Apps\\makom\\ui\\src\\components\\Login.js":"7","D:\\Apps\\makom\\ui\\src\\utils\\interceptor.js":"8","D:\\Apps\\makom\\ui\\src\\components\\Map.js":"9","D:\\Apps\\makom\\ui\\src\\components\\NMap.js":"10","D:\\Apps\\makom\\ui\\src\\components\\Toolbar.js":"11","D:\\Apps\\makom\\ui\\src\\services\\map.service.js":"12"},{"size":39942,"mtime":1630220006796,"results":"13","hashOfConfig":"14"},{"size":1480,"mtime":1630227941240,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":360,"mtime":1614067690423,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"14"},{"size":1323,"mtime":1646820914363,"results":"19","hashOfConfig":"14"},{"size":4872,"mtime":1614767651837,"results":"20","hashOfConfig":"14"},{"size":452,"mtime":1614845695799,"results":"21","hashOfConfig":"14"},{"size":31125,"mtime":1646311960828,"results":"22","hashOfConfig":"14"},{"size":43759,"mtime":1647898860007,"results":"23","hashOfConfig":"14"},{"size":100941,"mtime":1644773750301,"results":"24","hashOfConfig":"14"},{"size":225,"mtime":1646312638570,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"1cg0ag3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":238,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"D:\\Apps\\makom\\ui\\src\\components\\Home.js",["59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76"],"import React from 'react';\r\nimport _ from 'lodash'\r\nimport axios from 'axios';\r\nimport { API, HEADERS } from '../utils/constants';\r\nimport {\r\n    Segment,\r\n    Table,\r\n    Grid,\r\n    Button,\r\n    Icon,\r\n    Pagination,\r\n    Dropdown,\r\n    Menu,\r\n    Popup,\r\n    Search,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Message,\r\n    Dimmer,\r\n    Loader\r\n} from 'semantic-ui-react';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport axiosInterceptor from '../utils/interceptor'\r\nimport { CSVLink } from \"react-csv\";\r\nimport CSVReader from 'react-csv-reader';\r\nimport { Route } from 'react-router-dom'\r\n\r\nlet search_timeout;\r\n\r\nexport class ListPage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pepole: [],\r\n            isLoading: true,\r\n            error: null,\r\n            itemsPerPage: 10,\r\n            pageData: [],\r\n            showUpdatesButtons: false,\r\n            currentPage: 1,\r\n            totalPages: 0,\r\n            user: '',\r\n            token: null,\r\n            contextMenuOpen: false,\r\n            selectedRow: null,\r\n            contextRef: null,\r\n            addRow: false,\r\n            search_loading: false,\r\n            search_value: '',\r\n            search_results: [],\r\n            sort_coulmn: null,\r\n            sort_direction: null,\r\n            openExportModal: false,\r\n            exportData: [],\r\n            exportFileName: '',\r\n            importFileName: '',\r\n            account_name: '',\r\n            account_logo: '',\r\n            account_id: null,\r\n            pepole_lists_options: [],\r\n            pepole_list_selected: null,\r\n            openDeleteModel: false,\r\n            new_list_name: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user = localStorage.getItem('user_data');\r\n        if (user) {\r\n            user = JSON.parse(user).user;\r\n            axios.post(`${API}/pepole/get-all`, { token: user.token, pepole_list_id: null })\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        if (response.data.pepole.length > 0) {\r\n                            const pepole = response.data.pepole;\r\n                            const pepole_lists = response.data.pepole_lists;\r\n                            const totalPages = parseInt(pepole.length / this.state.itemsPerPage);\r\n\r\n                            let pepole_lists_options = pepole_lists.map(p => {\r\n                                return {\r\n                                    key: p.id,\r\n                                    text: p.name,\r\n                                    value: p.id\r\n                                }\r\n                            })\r\n\r\n                            this.setState({\r\n                                pepole: pepole, pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                                totalPages: totalPages, pepole_lists_options: pepole_lists_options,\r\n                                pepole_list_selected: pepole_lists_options[pepole_lists_options.length - 1],\r\n                                user: `${user.firstName} - ${user.lastName}`,\r\n                                token: user.token, account_name: user.account_name, account_logo: user.account_logo,\r\n                                account_id: user.account_id, isLoading: false\r\n                            })\r\n                        }\r\n                    }\r\n                    else\r\n                        this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n        else\r\n            window.location('/');\r\n    }\r\n\r\n    newRow = () => {\r\n        let row = {};\r\n        const rowKeys = Object.keys(this.state.pepole[0]);\r\n        rowKeys.forEach(prop => {\r\n            row[prop] = '';\r\n        });\r\n        row.id = new Date().getDate();\r\n        row.added = true;\r\n        row.pepole_list_id = this.state.pepole_list_selected.key;\r\n        return row;\r\n    }\r\n\r\n    handleContentEditable = event => {\r\n        const value = event.target.value;\r\n        const column = event.currentTarget.dataset.column;\r\n        const row = event.currentTarget.dataset.row;\r\n        const added = event.currentTarget.dataset.new_row == 'true';\r\n\r\n        let { pageData } = this.state;\r\n\r\n        if (added === false) {\r\n            let updatedRow = pageData.find((item, i) => item.id == row);\r\n            updatedRow[column] = value;\r\n            updatedRow.changed = true;\r\n        }\r\n        else {\r\n            pageData[0][column] = value;\r\n        }\r\n        this.setState({\r\n            pageData: pageData,\r\n            showUpdatesButtons: true\r\n        })\r\n    }\r\n\r\n    downloadCsv = () => {\r\n        let data = [];\r\n        data.push(HEADERS.map(h => h.title));\r\n        const pepole = this.state.pepole;\r\n        for (let p of pepole) {\r\n            let arr = [];\r\n            for (let key in p) {\r\n                if (key != 'id' && key != 'changed' && key != 'pepole_list_id')\r\n                    arr.push(p[key]);\r\n            }\r\n            data.push(arr);\r\n        }\r\n        this.setState({ exportData: data, openExportModal: true })\r\n    }\r\n\r\n    validateRow = (changesList) => {\r\n        this.setState({ error: null })\r\n        let empty = true;\r\n        let isNotNumber;\r\n        let isValidate = true;\r\n\r\n        changesList.forEach(element => {\r\n            HEADERS.forEach(header => {\r\n                if (element[header.key] != \"\") {\r\n                    empty = false;\r\n                }\r\n            });\r\n        });\r\n        console.log(empty);\r\n        if (empty) {\r\n            this.setState({ error: \"לא ניתן להכניס שורה ריקה\" })\r\n            return false;\r\n        }\r\n        else {\r\n            for (const element of changesList) {\r\n                for (const header of HEADERS) {\r\n                    if (header.type === \"number\") {\r\n                        isNotNumber = isNaN(element[header.key]);\r\n                        if (isNotNumber && element[header.key] != '') {\r\n                            isValidate = false;\r\n                            this.setState({ error: `חובה להזין מספרים בלבד בשדה \"${header.title}\"` })\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return isValidate;\r\n        }\r\n    }\r\n\r\n    saveChanges = () => {\r\n        const changesList = this.state.pageData.filter(p => p.changed || p.added);\r\n        const validation = this.validateRow(changesList);\r\n        if (changesList.length > 0) {\r\n            if (validation) {\r\n                axios.post(`${API}/pepole/update-list`, { token: this.state.token, changesList: changesList })\r\n                    .then(response => {\r\n                        if (response.data.success) {\r\n                            //update pepole list\r\n                            let pepole = this.state.pepole;\r\n                            changesList.forEach(element => {\r\n                                if (element.changed) {\r\n                                    const index = _.findIndex(pepole, { id: element.id });\r\n                                    pepole.splice(index, 1, element);\r\n                                }\r\n                                else {\r\n                                    pepole.push(element);\r\n                                }\r\n                            });\r\n                            const totalPages = parseInt(pepole.length / this.state.itemsPerPage);\r\n\r\n                            this.setState({\r\n                                pepole: pepole, pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                                totalPages: totalPages, currentPage: 1, showUpdatesButtons: false\r\n                            })\r\n\r\n                        }\r\n                        else {\r\n                            this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                            console.error('There was an error!', response.data.error);\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                        console.error('There was an error!', error);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n\r\n    deleteRow = () => {\r\n        axios.post(`${API}/pepole/delete-row`, { token: this.state.token, row: this.state.selectedRow })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    this.setState({\r\n                        contextMenuOpen: false,\r\n                        pepole: this.state.pepole.filter(item => item.id != this.state.selectedRow),\r\n                        pageData: this.state.pageData.filter(item => item.id != this.state.selectedRow)\r\n                    });\r\n                }\r\n                else {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    createContextFromEvent = (e) => {\r\n        const left = e.clientX\r\n        const top = e.clientY\r\n        const right = left + 1\r\n        const bottom = top + 1\r\n\r\n        return {\r\n            getBoundingClientRect: () => ({\r\n                left,\r\n                top,\r\n                right,\r\n                bottom,\r\n\r\n                height: 0,\r\n                width: 0,\r\n            }),\r\n        }\r\n    }\r\n\r\n    switchPage = (event, data) => {\r\n        const pepole = this.state.pepole;\r\n        const start = (this.state.itemsPerPage * (data.activePage - 1));\r\n        const end = this.state.itemsPerPage * data.activePage;\r\n        const pageData = pepole.slice(start, end);\r\n\r\n        this.setState({ pageData: pageData, currentPage: data.activePage, showUpdatesButtons: false });\r\n    }\r\n\r\n    updateItemsPerPage = (event, data) => {\r\n        const itemsPerPage = data.value;\r\n        const pepole = this.state.pepole;\r\n        const totalPages = parseInt(pepole.length / itemsPerPage);\r\n        const pageData = pepole.slice(0, itemsPerPage);\r\n\r\n        this.setState({ itemsPerPage: itemsPerPage, totalPages: totalPages, pageData, pageData, currentPage: 1 })\r\n    }\r\n\r\n    signOut = () => {\r\n        axios.get(`${API}auth/logout`)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    localStorage.removeItem('user_data');\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: error.response });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    addRow = () => {\r\n        let pageData = this.state.pageData;\r\n        const newRow = this.newRow();\r\n        pageData.splice(0, 0, newRow);\r\n        this.setState({ pageData: pageData, showUpdatesButtons: true });\r\n    }\r\n\r\n    handleSearchChange = (e, data) => {\r\n        clearTimeout(search_timeout);\r\n        this.setState({ search_loading: true, search_value: data.value })\r\n\r\n        search_timeout = setTimeout(() => {\r\n            if (data.value.length === 0) {\r\n                const pepole = this.state.pepole;\r\n                this.setState({\r\n                    pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                    currentPage: 1,\r\n                    search_loading: false\r\n                })\r\n                return\r\n            }\r\n\r\n            const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n            const isMatch = (result) => re.test(result.last_name) || re.test(result.first_name)\r\n\r\n            this.setState({ search_results: _.filter(this.state.pepole, isMatch), search_loading: false })\r\n        }, 300)\r\n    };\r\n\r\n    importFile = (data, fileInfo) => {\r\n        this.setState({ error: null, isLoading: true })\r\n        let uploadError = \"\";\r\n        if (fileInfo.type != \"application/vnd.ms-excel\")\r\n            uploadError = \"סוג הקובץ אינו נתמך\"\r\n        if (uploadError == \"\") {\r\n            if (data.length > 0) {\r\n                console.log(data)\r\n                for (let header of HEADERS) {\r\n                    const headerFind = data[0].find((d) => d.replace('\"', '') === header.title.replace('\"', ''));\r\n                    if (!headerFind) {\r\n                        uploadError += `הכותרת \"${header.title}\" אינה קיימת`\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //     if (uploadError == \"\") {\r\n        //         for (let row of data) {\r\n        //             console.log(row.length)\r\n        //             if (row && row.length != HEADERS.length) {\r\n        //                 console.log(row);\r\n        //                 console.log(HEADERS.length)\r\n\r\n        //                 uploadError = \"כמות התאים אינה זהה לנדרש\"\r\n        //                 break;\r\n        //             }\r\n        //         }\r\n\r\n        //     }\r\n        //     if (uploadError != \"\") {\r\n        //         uploadError += `\r\n        //    ! נסה להוריד את הטבלה הקיימת כדי לראות דוגמה לקובץ תקין`\r\n        //         this.setState({ error: uploadError, isLoading: false })\r\n        //     }\r\n        if (uploadError == \"\") {\r\n            const pepole_list_id = new Date().getTime()\r\n            const pepole_list = {\r\n                id: pepole_list_id,\r\n                name: fileInfo.name.split('.')[0], account_id: this.state.account_id\r\n            }\r\n\r\n            let pepole_list_data = [];\r\n\r\n            for (let index = 1; index < data.length; index++) {\r\n                const element = data[index];\r\n                console.log(element)\r\n                let pepole_row = {};\r\n                pepole_row.id = new Date().getTime() + index;\r\n\r\n                pepole_row.pepole_list_id = pepole_list_id;\r\n                for (let header_index = 0; header_index < HEADERS.length; header_index++) {\r\n                    const header = HEADERS[header_index];\r\n                    if (header.type === \"number\")\r\n                        pepole_row[header.key] = parseInt(element[header_index]);\r\n                    else\r\n                        pepole_row[header.key] = element[header_index];\r\n                }\r\n                pepole_list_data.push(pepole_row);\r\n            }\r\n\r\n            axios.post(`${API}/pepole/add-new-list`, {\r\n                token: this.state.token, pepole_list: pepole_list,\r\n                pepole_list_data: pepole_list_data\r\n            })\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        window.location.reload();\r\n                    }\r\n                    else {\r\n                        this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                        console.error('There was an error!', response.data.error);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.setState({ error: null, isLoading: true, openDeleteModel: false })\r\n        axios.post(`${API}/pepole/delete-list`, {\r\n            token: this.state.token,\r\n            pepole_list_id: this.state.pepole_list_selected.key\r\n        })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    window.location.reload();\r\n                }\r\n                else {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                    console.error('There was an error!', response.data.error);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    changeListName = () => {\r\n        this.setState({ error: null, isLoading: true, openChangeNameModel: false })\r\n        axios.post(`${API}/pepole/change-name-list`, {\r\n            token: this.state.token,\r\n            pepole_list_id: this.state.pepole_list_selected.key,\r\n            pepole_list_name: this.state.new_list_name\r\n        })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    const new_pepole_list_selected = {\r\n                        key: this.state.pepole_list_selected.key,\r\n                        text: this.state.new_list_name,\r\n                        value: this.state.pepole_list_selected.value\r\n                    }\r\n\r\n                    let pepole_lists_options = this.state.pepole_lists_options;\r\n                    const index = _.findIndex(pepole_lists_options, { key: new_pepole_list_selected.key });\r\n                    pepole_lists_options.splice(index, 1, new_pepole_list_selected);\r\n                    pepole_lists_options = JSON.stringify(pepole_lists_options);\r\n\r\n                    this.setState({\r\n                        pepole_list_selected: new_pepole_list_selected,\r\n                        pepole_lists_options: JSON.parse(pepole_lists_options),\r\n                        isLoading: false\r\n                    })\r\n                }\r\n                else {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                    console.error('There was an error!', response.data.error);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    changePepoleList = (e, data) => {\r\n        this.setState({ error: null, isLoading: true })\r\n        axios.post(`${API}/pepole/get-all`, { token: this.state.token, pepole_list_id: data.value })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    if (response.data.pepole.length > 0) {\r\n                        const pepole = response.data.pepole;\r\n                        const totalPages = parseInt(pepole.length / this.state.itemsPerPage);\r\n\r\n                        const selectedPepoleList = this.state.pepole_lists_options.find((list) => list.key === data.value);\r\n\r\n                        this.setState({\r\n                            pepole: pepole, pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                            totalPages: totalPages, pepole_list_selected: selectedPepoleList, isLoading: false\r\n                        })\r\n                    }\r\n                }\r\n                else\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                console.error('There was an error!', error);\r\n            });\r\n\r\n    }\r\n\r\n    render() {\r\n        const pepole = this.state.pepole;\r\n        const pageData = this.state.pageData;\r\n        const headers = HEADERS;\r\n        const rowKeys = pepole.length > 0 ? Object.keys(pepole[0]) : [];\r\n        const totalPages = this.state.totalPages;\r\n        let hedear = this.state.account_name;\r\n        let pepole_list_selected_name = this.state.pepole_list_selected ? this.state.pepole_list_selected.text : \"\"\r\n\r\n        return (\r\n            <div dir=\"rtl\">\r\n                <Dimmer active={this.state.isLoading}>\r\n                    <Loader size=\"large\">נא המתן...</Loader>\r\n                </Dimmer>\r\n                <section >\r\n                    <Grid columns={3} className={'row-header header'}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <p>\r\n                                        {this.state.user}\r\n                                    </p>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <pre>\r\n                                        <span className=\"header-title\">\r\n                                            {hedear}\r\n                                        </span>\r\n                                    </pre>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </section>\r\n                <section className=\"functions-row\">\r\n                    <div className=\"search\">\r\n                        <Search\r\n                            loading={this.state.search_loading}\r\n                            onSearchChange={this.handleSearchChange}\r\n                            results={this.state.search_results}\r\n                            value={this.state.search_value}\r\n                            resultRenderer={(props) => {\r\n                                return `${props.first_name} ${props.last_name}`\r\n                            }}\r\n                            placeholder={\"חיפוש לפי שם \"}\r\n                            onResultSelect={(e, data) => {\r\n                                const selected = this.state.pepole.find((row) => row.id === data.result.id);\r\n                                this.setState({ pageData: [selected], currentPage: 1 });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div classNmae=\"pepole-list-ddl\">\r\n                        <Dropdown\r\n                            selection\r\n                            options={this.state.pepole_lists_options}\r\n                            value={this.state.pepole_list_selected ? this.state.pepole_list_selected.value : ''}\r\n                            onChange={this.changePepoleList}\r\n                        />\r\n                    </div>\r\n                    <div className=\"bottuns-row\">\r\n                        <Button onClick={this.signOut} color={'yellow'}\r\n                        >\r\n                            יציאה\r\n                                            <Icon name='sign-out' />\r\n                        </Button>\r\n                        <Button onClick={this.addRow} disabled={this.state.showUpdatesButtons} color={'yellow'}\r\n                        >\r\n                            הוספת שורה\r\n                                            <Icon name='add' />\r\n                        </Button>\r\n                        <Button onClick={this.downloadCsv} color={'yellow'} disabled={this.state.showUpdatesButtons}\r\n                        >\r\n                            הוצא לקובץ\r\n                                            <Icon name='file excel outline' />\r\n                        </Button>\r\n                        <Button color={'yellow'} disabled={this.state.showUpdatesButtons}\r\n                        >\r\n                            <CSVReader onFileLoaded={this.importFile} inputId=\"file\" inputName=\"file\" cssInputClass=\"inputfile\" />\r\n                            <label className=\"inputlabel\" htmlFor=\"file\">טען קובץ</label>\r\n                            <Icon name='file excel outline' />\r\n                        </Button>\r\n                        <Button onClick={() => { this.setState({ openDeleteModel: true }) }} color={'yellow'} disabled={this.state.showUpdatesButtons}\r\n                        >\r\n                            מחק רשימה\r\n                                            <Icon name='file excel outline' />\r\n                        </Button>\r\n                        <Button onClick={() => { this.setState({ openChangeNameModel: true }) }} color={'yellow'} disabled={this.state.showUpdatesButtons}\r\n                        >\r\n                            שנה שם רשימה\r\n                                            <Icon name='file excel outline' />\r\n                        </Button>\r\n\r\n                        {this.state.showUpdatesButtons &&\r\n                            <Button onClick={this.saveChanges} color={'yellow'}\r\n                            >\r\n                                שמירה\r\n                                            <Icon name='save outline' />\r\n                            </Button>\r\n                        }\r\n\r\n                        <Route render={({ history }) => (\r\n                            <Button onClick={() => {\r\n                                history.push('/')\r\n                            }} color={'yellow'}\r\n                            >\r\n                                מעבר למפה\r\n                                <Icon name='map' />\r\n                            </Button>\r\n                        )} />\r\n\r\n                    </div>\r\n\r\n                </section>\r\n                <section>\r\n                    <div>\r\n                        <Segment basic style={{ overflow: 'auto', maxHeight: '65vh' }}>\r\n                            {this.state.error != null &&\r\n                                <Message\r\n                                    error\r\n                                    header=' שגיאה '\r\n                                    content={this.state.error}\r\n                                />\r\n                            }\r\n                            <Table className=\"pepole-table\"\r\n                                color={'yellow'}\r\n                                celled\r\n                                selectable\r\n                                striped\r\n                                singleLine\r\n                                sortable\r\n                            >\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        {headers.map((header, i) => {\r\n                                            return (\r\n                                                <Table.HeaderCell key={i}\r\n                                                    sorted={this.state.sort_coulmn === header.key ? this.state.sort_direction : null}\r\n                                                    onClick={() => {\r\n                                                        if (this.state.sort_coulmn === header.key) {\r\n                                                            const pepole = this.state.pepole.slice().reverse()\r\n\r\n                                                            this.setState({\r\n                                                                sort_direction: this.state.sort_direction === 'ascending' ? 'descending' : 'ascending',\r\n                                                                pepole: pepole,\r\n                                                                pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                                                                currentPage: 1\r\n                                                            })\r\n                                                        }\r\n                                                        else {\r\n                                                            const pepole = _.sortBy(this.state.pepole, [header.key])\r\n                                                            this.setState({\r\n                                                                sort_coulmn: header.key,\r\n                                                                pepole: pepole,\r\n                                                                pageData: pepole.slice(0, this.state.itemsPerPage),\r\n                                                                sort_direction: 'ascending',\r\n                                                                currentPage: 1\r\n                                                            })\r\n                                                        }\r\n                                                    }}>{header.title}</Table.HeaderCell>\r\n                                            )\r\n                                        })}\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    {\r\n                                        pageData.map((row, row_index) => {\r\n                                            return (\r\n                                                <Table.Row key={row.id}\r\n                                                    onContextMenu={(e) => {\r\n                                                        e.preventDefault()\r\n                                                        this.setState({\r\n                                                            contextMenuOpen: true,\r\n                                                            contextRef: this.createContextFromEvent(e),\r\n                                                            selectedRow: row.id\r\n                                                        });\r\n                                                    }}>\r\n                                                    {\r\n                                                        rowKeys.map((cell, index) => {\r\n                                                            if (cell != \"id\" && cell != \"changed\" && cell != \"pepole_list_id\") {\r\n                                                                return (\r\n                                                                    <Table.Cell key={row.id + '_' + index}>\r\n                                                                        <ContentEditable\r\n                                                                            html={row[cell] ? row[cell].toString() : ''}\r\n                                                                            data-column={cell}\r\n                                                                            data-row={row.id}\r\n                                                                            data-new_row={row.added ? true : false}\r\n                                                                            className=\"content-editable\"\r\n                                                                            onChange={this.handleContentEditable}\r\n                                                                        />\r\n                                                                    </Table.Cell>\r\n                                                                )\r\n                                                            }\r\n                                                        })}\r\n                                                </Table.Row>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </Segment>\r\n                        <Segment basic dir=\"ltr\" textAlign=\"center\">\r\n                            <Pagination\r\n                                activePage={this.state.currentPage}\r\n                                onPageChange={this.switchPage}\r\n                                pageItem={<Button color={'yellow'} size={'large'} />}\r\n                                ellipsisItem={<Button icon=\"ellipsis horizontal\" disabled color={'yellow'} />}\r\n                                firstItem={<Button disabled={this.state.currentPage <= 1}\r\n                                    content=\"ראשון\"\r\n                                    icon=\"angle double left\" labelPosition=\"left\" color={'yellow'}\r\n                                />}\r\n                                lastItem={<Button disabled={this.state.currentPage >= totalPages}\r\n                                    content=\"אחרון\"\r\n                                    icon=\"angle double right\" labelPosition=\"right\" color={'yellow'}\r\n                                />}\r\n                                prevItem={<Button disabled={this.state.activePage <= 1}\r\n                                    content=\"הקודם\" icon=\"left arrow\"\r\n                                    labelPosition=\"left\" color={'yellow'}\r\n                                />}\r\n                                nextItem={<Button disabled={this.state.activePage >= totalPages}\r\n                                    content=\"הבא\" icon=\"right arrow\"\r\n                                    labelPosition=\"right\" color={'yellow'}\r\n                                />}\r\n                                totalPages={totalPages}\r\n                                secondary\r\n                            />\r\n                        </Segment>\r\n                        <Segment basic textAlign=\"center\" color={'yellow'} style={{ margin: \"14px\" }}>\r\n                            {\"הצג\"} {'   '}\r\n                            <Button.Group color=\"yellow\" size={'large'}>\r\n                                <Dropdown compact\r\n                                    button\r\n                                    inline\r\n                                    upward\r\n                                    floating\r\n                                    closeOnChange\r\n                                    openOnFocus\r\n                                    onChange={this.updateItemsPerPage}\r\n                                    value={this.state.itemsPerPage}\r\n                                    options={[\r\n                                        { key: '10', value: 10, text: '10' },\r\n                                        { key: '20', value: 20, text: '20' },\r\n                                        { key: '50', value: 50, text: '50' }]}\r\n                                />\r\n                            </Button.Group>\r\n                            {'   '} {\"שורות לעמוד\"}\r\n                        </Segment>\r\n                    </div>\r\n                </section>\r\n                <Popup\r\n                    basic\r\n                    context={this.state.contextRef}\r\n                    onClose={() => this.setState({ contextMenuOpen: false })}\r\n                    open={this.state.contextMenuOpen}\r\n                >\r\n                    <Menu style={{ width: '100px' }} dir=\"rtl\"\r\n                        items={[\r\n                            { key: '1', content: \"מחק שורה\" },\r\n                        ]}\r\n                        onItemClick={(e, item) => {\r\n                            this.deleteRow();\r\n                        }}\r\n                        secondary\r\n                        vertical\r\n                    />\r\n                </Popup>\r\n                <Modal\r\n                    closeIcon={true} dimmer={'blurring'}\r\n                    onClose={() => {\r\n                        this.setState({ openExportModal: false });\r\n                    }}\r\n                    open={this.state.openExportModal}\r\n                    className='export-modal'\r\n                >\r\n                    <Modal.Header>הוצא את המידע לקובץ</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Button>\r\n                                <CSVLink className=\"btn btn-primary\" filename={`${this.state.exportFileName}.csv`} data={this.state.exportData}\r\n                                    onClick={(event) => {\r\n                                        this.setState({ openExportModal: false })\r\n                                    }}>הורד</CSVLink>\r\n                            </Button>\r\n                            &nbsp; &nbsp; &nbsp;\r\n                            <Input placeholder=\"שם הקובץ\" onChange={(e) => {\r\n                                this.setState({ exportFileName: e.target.value });\r\n                            }}></Input>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                </Modal>\r\n                <Modal closeIcon={true} dimmer={'blurring'}\r\n                    onClose={() => {\r\n                        this.setState({ openDeleteModel: false });\r\n                    }}\r\n                    open={this.state.openDeleteModel}>\r\n                    <Modal.Header>\r\n                        מחיקת רשימה\r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                        ? מחיקת הרשימה תמחוק את כל הנתונים השייכים לרשימה <b>\"{pepole_list_selected_name}\"</b>, האם תרצה להמשיך\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button\r\n                            content=\"כן\"\r\n                            labelPosition='right'\r\n                            icon='checkmark'\r\n                            onClick={this.deleteList}\r\n                            positive\r\n                        />\r\n                        <Button color='black' onClick={() => this.setState({ openDeleteModel: false })}>\r\n                            לא\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n                <Modal closeIcon={true} dimmer={'blurring'}\r\n                    onClose={() => {\r\n                        this.setState({ openChangeNameModel: false });\r\n                    }}\r\n                    open={this.state.openChangeNameModel}>\r\n                    <Modal.Header>\r\n                        שינוי שם הרשימה\r\n                    </Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Input fluid placeholder=\"הכנס שם חדש - עברית ללא תווים מיוחדים\" onChange={(e) => {\r\n                                this.setState({ new_list_name: e.target.value });\r\n                            }}></Input>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                    <Modal.Actions>\r\n                        <Button\r\n                            content=\"שנה\"\r\n                            labelPosition='right'\r\n                            icon='checkmark'\r\n                            onClick={this.changeListName}\r\n                            positive\r\n                        />\r\n                        <Button color='black' onClick={() => this.setState({ openChangeNameModel: false })}>\r\n                            ביטול\r\n                        </Button>\r\n                    </Modal.Actions>\r\n                </Modal>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}","D:\\Apps\\makom\\ui\\src\\utils\\constants.js",[],["77","78"],"D:\\Apps\\makom\\ui\\src\\index.js",[],["79","80"],"D:\\Apps\\makom\\ui\\src\\styles.js",[],"D:\\Apps\\makom\\ui\\src\\reportWebVitals.js",[],"D:\\Apps\\makom\\ui\\src\\App.js",["81"],"D:\\Apps\\makom\\ui\\src\\components\\Login.js",["82","83","84"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { CURRENT_VERSION, API } from '../utils/constants';\r\nimport {\r\n    Message,\r\n    Label,\r\n    Button,\r\n    Icon,\r\n    Container,\r\n    Form\r\n} from 'semantic-ui-react';\r\n\r\nexport class LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: null,\r\n            login_success: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    login = () => {\r\n        this.setState({ error: null });\r\n        if (!this.state.email || !this.state.password) {\r\n            this.setState({ error: \"חובה להזין מייל משתמש וסיסמה\" });\r\n            return\r\n        }\r\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (reg.test(this.state.email) === false) {\r\n            this.setState({ error: \"אימייל לא תקין\" });\r\n            return\r\n        }\r\n        axios.post(`${API}auth/login`, { email: this.state.email, password: this.state.password })\r\n            .then(response => {\r\n                console.log(response);\r\n                if (response.data) {\r\n                    if (!response.data.success) {\r\n                        this.setState({ error: response.data.error == \"Auth Error\" ? \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" : \"משתמש לא קיים\" })\r\n                    }\r\n                    else {\r\n                        localStorage.setItem('user_data', JSON.stringify(response.data));\r\n                        this.setState({ login_success: true });\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                console.error('There was an error!', error);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const env = 'DEV';\r\n        const versionLabel = `VER  ${CURRENT_VERSION} - ${env}`;\r\n        const login_success = this.state.login_success;\r\n\r\n        if (login_success)\r\n            window.location.reload();\r\n        return (\r\n            <div >\r\n                <Label content={versionLabel} attached=\"top right\" size={'large'} />\r\n                <Label attached=\"bottom right\" size={'large'}>\r\n                    Copyright\r\n            <Icon name={'copyright outline'} style={{ marginLeft: '5px', marginRight: '5px' }} />\r\n                    {new Date().getFullYear()} Dovi Perla All Rights Reserved\r\n          </Label>\r\n                <Container textAlign={'center'} text>\r\n                    <Form error={this.state.error != null}>\r\n                        {/* <Image src={LOGO} centered inline circular /> */}\r\n                        <Message floating>\r\n                            <Form.Field>\r\n                                <Form.Input\r\n                                    placeholder=\"מייל\"\r\n                                    icon=\"user\"\r\n                                    iconPosition=\"left\"\r\n                                    onChange={(e, data) => {\r\n                                        this.setState({ email: data.value.trim() });\r\n                                    }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Form.Input\r\n                                    type={'password'}\r\n                                    placeholder=\"סיסמה\"\r\n                                    icon=\"lock\"\r\n                                    iconPosition=\"left\"\r\n                                    onChange={(e, data) => {\r\n                                        this.setState({ password: data.value });\r\n                                    }}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Button type=\"submit\"\r\n                                    color={'yellow'}\r\n                                    content={\"כניסה\"}\r\n                                    fluid\r\n                                    size={'massive'}\r\n                                    onClick={this.login}\r\n                                />\r\n                            </Form.Field>\r\n                            {this.state.error != null &&\r\n                                <Message\r\n                                    error\r\n                                    header=' שגיאה '\r\n                                    content={this.state.error}\r\n                                />\r\n                            }\r\n                        </Message>\r\n                    </Form>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Apps\\makom\\ui\\src\\utils\\interceptor.js",["85"],"import axios from 'axios';\r\n\r\nconst axiosInterceptor = axios.interceptors.response.use((response) => {\r\n    return response;\r\n}, (error) => {\r\n    console.log(error);\r\n    if (error) {\r\n        if (error.status == 401 || error.toString().includes(\"401\")) {\r\n            localStorage.removeItem('user_data');\r\n            window.location.reload();\r\n        }\r\n        return Promise.reject(error.message);\r\n    }\r\n});\r\n\r\nexport default axiosInterceptor;",["86","87"],"D:\\Apps\\makom\\ui\\src\\components\\Map.js",["88","89","90","91","92"],"import React from 'react';\r\nimport Spreadsheet from \"x-data-spreadsheet\";\r\nimport axios from 'axios';\r\nimport { API, HEADERS } from '../utils/constants';\r\nimport {\r\n    Dimmer,\r\n    Search,\r\n    Grid,\r\n    Dropdown,\r\n    Loader,\r\n    Message,\r\n    Button,\r\n    Icon,\r\n    Label,\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash'\r\nimport { Route } from 'react-router-dom'\r\n\r\nexport class MapPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            token: null,\r\n            data: null,\r\n            isLoading: true,\r\n            error: null,\r\n            search_loading: false,\r\n            pepole: null,\r\n            search_results: null,\r\n            search_value: '',\r\n            selected_col_i: null,\r\n            selected_row_i: null,\r\n            sheet_map: null,\r\n            account_name: '',\r\n            pepole_lists_options: [],\r\n            pepole_list_selected: null,\r\n            sum_places: 0,\r\n            pepole_list_chenged: [],\r\n            openSelectedTurModel: false,\r\n            cell_range: null,\r\n            turim: [],\r\n            tur_name: \"\",\r\n            tur_selected: null\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const keyboardEvent = new KeyboardEvent('keydown', {\r\n            code: 'Tab',\r\n            key: 'Tab',\r\n            charCode: 9,\r\n            keyCode: 9,\r\n            view: window,\r\n            bubbles: true\r\n        });\r\n\r\n\r\n        let user = localStorage.getItem('user_data');\r\n        if (user) {\r\n            user = JSON.parse(user).user;\r\n            const s = new Spreadsheet(\"#x-spreadsheet-map\", {\r\n                mode: 'read', // edit | read\r\n                showToolbar: true,\r\n                showGrid: true,\r\n                showContextmenu: false,\r\n                view: {\r\n                    height: () => document.documentElement.clientHeight - 115,\r\n                    width: () => document.documentElement.clientWidth,\r\n                },\r\n                row: {\r\n                    len: 100,\r\n                    height: 60,\r\n                },\r\n                col: {\r\n                    len: 22,\r\n                    width: 100,\r\n                    indexWidth: 60,\r\n                    minWidth: 60,\r\n                },\r\n                style: {\r\n                    bgcolor: '#ffffff',\r\n                    align: 'center',\r\n                    valign: 'middle',\r\n                    textwrap: false,\r\n                    strike: false,\r\n                    underline: false,\r\n                    color: '#0a0a0a',\r\n                    font: {\r\n                        name: 'Helvetica',\r\n                        size: 10,\r\n                        bold: false,\r\n                        italic: false,\r\n                    },\r\n                },\r\n            })\r\n                .change(data => {\r\n                    //get names from map table\r\n                    const rows = Object.values(data.rows);\r\n                    const rows_keys = Object.keys(data.rows);\r\n\r\n                    let names = [];\r\n                    for (let index = 0; index < rows.length; index++) {\r\n\r\n                        if (rows[index].cells) {\r\n                            const cells = Object.values(rows[index].cells)\r\n                            const cells_keys = Object.keys(rows[index].cells)\r\n\r\n                            for (let cell_index = 0; cell_index < cells.length; cell_index++) {\r\n                                if (cells[cell_index].text) {\r\n\r\n                                    let name = names.find((name) => name.key === `${rows_keys[index]} ${cells_keys[cell_index]}`)\r\n                                    if (name)\r\n                                        name.text = cells[cell_index].text;\r\n                                    else\r\n                                        names.push({\r\n                                            key: this.find_map_key_by_tur(rows_keys[index], cells_keys[cell_index])\r\n                                            , text: cells[cell_index].text\r\n                                        })\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    //update pepole list\r\n                    for (let p_index = 0; p_index < this.state.pepole.length; p_index++) {\r\n                        const p_element = this.state.pepole[p_index];\r\n\r\n                        const map_names = names.filter(n => n.text === `${p_element.first_name} ${p_element.last_name}`)\r\n                        //map contain person and list not\r\n                        for (let m_index = 0; m_index < map_names.length; m_index++) {\r\n                            const m_element = map_names[m_index];\r\n                            //person exist on map and not exist in list\r\n                            if (!p_element.point_on_map || p_element.point_on_map === \"\") {\r\n                                //add map point to list and calculate places\r\n                                //if (m_element.key) {\r\n\r\n                                p_element.point_on_map = m_element.key.toString();\r\n                                p_element.changed = true;\r\n                                p_element.places_count--;\r\n                                //}\r\n                            }\r\n                            else {\r\n\r\n                                let p_places = p_element.point_on_map.split(',');\r\n\r\n                                const place_exist = p_places.find(p => p === m_element.key)\r\n\r\n                                //add map point to list and calculate places\r\n                                if (!place_exist) {\r\n                                    p_element.point_on_map += `,${m_element.key}`\r\n                                    p_element.places_count--;\r\n                                    p_element.changed = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        //list contain person and map not\r\n                        if (p_element.point_on_map && p_element.point_on_map != \"\") {\r\n                            let p_places = p_element.point_on_map.split(',');\r\n                            let removed = [];\r\n                            for (let place_index = 0; place_index < p_places.length; place_index++) {\r\n                                const place = p_places[place_index];\r\n                                const exist_on_map = names.find(n => n.text === `${p_element.first_name} ${p_element.last_name}` && n.key === place);\r\n                                if (!exist_on_map) {\r\n                                    p_element.places_count++;\r\n                                    removed.push(place);\r\n                                }\r\n                            }\r\n                            p_element.point_on_map = \"\";\r\n                            for (let index = 0; index < p_places.length; index++) {\r\n                                const element = p_places[index];\r\n                                if (!removed.find(e => e === element)) {\r\n                                    p_element.changed = true;\r\n                                    if (p_element.point_on_map === \"\")\r\n                                        p_element.point_on_map = element\r\n                                    else\r\n                                        p_element.point_on_map += `,${element}`\r\n                                }\r\n                            }\r\n                        }\r\n                        if (p_element.first_name === \"דוב\" && p_element.last_name === \"פרלא\") {\r\n                        }\r\n                    }\r\n\r\n                    let count_of_places = 0;\r\n                    this.state.pepole.map((p) => p.places_count != null ? count_of_places += p.places_count : 0)\r\n                    this.setState({\r\n                        data: data,\r\n                        sum_places: count_of_places\r\n                    })\r\n                });\r\n            s.on('cell-edited', (text, ri, ci) => {\r\n                let sheet_map = this.state.sheet_map;\r\n                sheet_map.datas[0].settings.mode = 'edit';\r\n                sheet_map.reRender();\r\n                this.setState({ sheet_map: sheet_map })\r\n                // s.cellText(ri, ci, '')\r\n                //allow open search only if the place mark by tur\r\n                // for (let index = 0; index < this.state.turim.length; index++) {\r\n                //     const element = this.state.turim[index];\r\n\r\n                //     if (ci >= element.cell_range.sci && ci <= element.cell_range.eci && ri >= element.cell_range.sri && ri <= element.cell_range.eri) {\r\n                //         this.setState({ search_value: text, selected_col_i: ci, selected_row_i: ri });\r\n                //         if (text.length > 0) {\r\n                //             this.handleSearchChange(null, { value: text });\r\n                //             document.querySelector(\".results\").style.display = 'block';\r\n                //         }\r\n                //         else {\r\n                //             document.querySelector(\".results\").style.display = 'none';\r\n                //         }\r\n                //     }\r\n                // }\r\n            })\r\n\r\n            s.on('cell-selected', (cell, ri, ci) => {\r\n                console.log(cell)\r\n                this.setState({ cell_range: null })\r\n            })\r\n\r\n            s.on('cells-selected', (cell, cell_range) => {\r\n                this.setState({ cell_range: cell_range })\r\n\r\n                //check if cell_range equal to tur, if yes allow to remove tur\r\n                const turim = this.state.turim;\r\n                for (let row_index = cell_range.sri; row_index <= cell_range.eri; row_index++) {\r\n                    for (let col_index = cell_range.sci; col_index <= cell_range.eci; col_index++) {\r\n                        const tur = turim.find(t => t.cell_range.sri <= row_index && t.cell_range.eri >= row_index &&\r\n                            t.cell_range.sci <= col_index && t.cell_range.eci >= col_index)\r\n                        if (tur) {\r\n                            this.setState({ tur_selected: tur })\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            axios.post(`${API}/pepole/get-all`, { token: user.token, pepole_list_id: null })\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        if (response.data.pepole.length > 0) {\r\n                            const pepole = response.data.pepole;\r\n                            const pepole_lists = response.data.pepole_lists;    \r\n                            let pepole_lists_options = pepole_lists.map(p => {\r\n                                return {\r\n                                    key: p.id,\r\n                                    text: p.name,\r\n                                    value: p.id,\r\n                                    className: 'right floated'\r\n                                }\r\n                            })\r\n\r\n                            let count_of_places = 0;\r\n                            pepole.map(p => p.places_count != null ? count_of_places += p.places_count : 0)\r\n\r\n                            s.loadData(pepole_lists[pepole_lists.length - 1].map != null ? JSON.parse(pepole_lists[pepole_lists.length - 1].map) : {}) // load data\r\n\r\n                            this.setState({\r\n                                pepole: pepole, sheet_map: s, account_name: user.account_name, pepole_lists_options: pepole_lists_options,\r\n                                pepole_list_selected: pepole_lists_options[pepole_lists.length - 1], isLoading: false, token: user.token,\r\n                                data: JSON.parse(pepole_lists[pepole_lists.length - 1].map), sum_places: count_of_places,\r\n                                turim: pepole_lists[pepole_lists.length - 1].turim != null ? JSON.parse(pepole_lists[pepole_lists.length - 1].turim) : []\r\n                            })\r\n                        }\r\n                    }\r\n                    else\r\n                        this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                    console.error('There was an error!', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    is_cell_selected_in_tur = (col, row) => {\r\n        // if (turim.find(t => t.cell_range.sri <= row && t.cell_range.eri >= row &&\r\n        //     t.cell_range.sci <= col && t.cell_range.eci >= col)) {\r\n        //     tur_selected = true;\r\n        // }\r\n    }\r\n\r\n    find_map_key_by_tur = (map_row, map_coulmn) => {\r\n        if (this.state.turim.length > 0) {\r\n            for (let index = 0; index < this.state.turim.length; index++) {\r\n                const tur = this.state.turim[index];\r\n                if ((map_row >= tur.cell_range.sri && map_row <= tur.cell_range.eri)\r\n                    && (map_coulmn >= tur.cell_range.sci && map_coulmn <= tur.cell_range.eci)) {\r\n                    return `${map_row - tur.cell_range.sri} ${tur.tur_name} ${map_coulmn - tur.cell_range.sci}`\r\n                }\r\n                else {\r\n                    return `${map_row} ${map_coulmn}`\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return `${map_row} ${map_coulmn}`\r\n        }\r\n    }\r\n\r\n    convert_col_num = (num) => {\r\n        let arr = ['ת', 'ש', 'ר', 'ק', 'צ', 'פ', 'ע', 'ס', 'נ', 'מ', 'ל', 'כ', 'י', 'ט', 'ח', 'ז', 'ו', 'ה', 'ד', 'ג', 'ב', 'א']\r\n        arr = arr.reverse();\r\n        return arr[num];\r\n    }\r\n\r\n    changePepoleList = (e, data) => {\r\n        this.setState({ error: null, isLoading: true })\r\n        axios.post(`${API}/pepole/get-all`, { token: this.state.token, pepole_list_id: data.value })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    if (response.data.pepole.length > 0) {\r\n                        const pepole = response.data.pepole;\r\n                        const pepole_list = response.data.pepole_lists[response.data.pepole_lists.length - 1];\r\n                        const selectedPepoleList = this.state.pepole_lists_options.find((list) => list.key === data.value);\r\n                        let count_of_places = 0;\r\n                        pepole.map((p) => p.places_count != null ? count_of_places++ : 0)\r\n                        this.state.sheet_map.loadData(pepole_list.map != null ? JSON.parse(pepole_list.map) : {});\r\n                        this.setState({\r\n                            pepole: pepole,\r\n                            pepole_list_selected: selectedPepoleList, isLoading: false, data: JSON.parse(pepole_list.map),\r\n                            sum_places: count_of_places, turim: pepole_list.turim != null ? JSON.parse(pepole_list.turim) : []\r\n                        })\r\n                    }\r\n                }\r\n                else\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\", isLoading: false });\r\n                console.error('There was an error!', error);\r\n            });\r\n\r\n    }\r\n\r\n    handleSearchChange = (e, data) => {\r\n        if (data.value.length === 0) {\r\n            return\r\n        }\r\n        else {\r\n            this.setState({ search_loading: true })\r\n            const re = new RegExp(_.escapeRegExp(data.value), 'i')\r\n            const isMatch = (result) => re.test(result.last_name) || re.test(result.first_name)\r\n\r\n            this.setState({ search_results: _.filter(this.state.pepole, isMatch), search_loading: false })\r\n        }\r\n    };\r\n\r\n    saveChanges = () => {\r\n        axios.post(`${API}/pepole/update-map`, {\r\n            token: this.state.token, pepole_list_id: this.state.pepole_list_selected.key, map: JSON.stringify(this.state.data),\r\n            pepole: this.state.pepole.filter(p => p.changed), turim: JSON.stringify(this.state.turim)\r\n        })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n\r\n                }\r\n                else {\r\n                    this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                    console.error('There was an error!', response.data.error);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: \"ארעה שגיאה, במידה והתקלה נמשכת אנא פנה לתמיכה\" });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    numToSSColumn = (num) => {\r\n        let s = '', t;\r\n\r\n        while (num > 0) {\r\n            t = (num - 1) % 26;\r\n            s = String.fromCharCode(65 + t) + s;\r\n            num = (num - t) / 26 | 0;\r\n        }\r\n        return s || undefined;\r\n    }\r\n\r\n    delete_tur = () => {\r\n        let data = this.state.data;\r\n        const tur_selected = this.state.tur_selected\r\n        for (let row_index = tur_selected.cell_range.sri - 1; row_index <= tur_selected.cell_range.eri; row_index++) {\r\n            let row = data.rows[row_index]\r\n            if (row) {\r\n                for (let col_index = tur_selected.cell_range.sci; col_index <= tur_selected.cell_range.eci; col_index++) {\r\n                    if (row.cells[col_index]) {\r\n                        delete row.cells[col_index]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.state.sheet_map.loadData(data);\r\n        this.setState({\r\n            tur_selected: null,\r\n            data: data,\r\n            cell_range: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let hedear = this.state.account_name;\r\n\r\n        if (document.getElementsByClassName('x-spreadsheet-bottombar').length > 0) {\r\n            document.getElementsByClassName('x-spreadsheet-bottombar')[0].style.display = 'none';\r\n        }\r\n        console.log(this.state.sheet_map)\r\n        console.log(this.state.data)\r\n        return (\r\n            <div >\r\n                <Dimmer active={this.state.isLoading}>\r\n                    <Loader size=\"large\">נא המתן...</Loader>\r\n                </Dimmer>\r\n                <section >\r\n                    <Grid columns={3} className={'row-header header'}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <p>\r\n                                        {this.state.user}\r\n                                    </p>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <div>\r\n                                    <pre>\r\n                                        <span className=\"header-title\">\r\n                                            {hedear}\r\n                                        </span>\r\n                                    </pre>\r\n                                </div>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </section>\r\n                <section dir=\"rtl\" className=\"functions-row\">\r\n                    <div className=\"search\">\r\n                        <Search\r\n                            loading={this.state.search_loading}\r\n                            onSearchChange={this.handleSearchChange}\r\n                            results={this.state.search_results}\r\n                            value={this.state.search_value}\r\n                            resultRenderer={(props) => {\r\n                                return `${props.first_name} ${props.last_name} מס' מקומות ${props.places_count}`\r\n                            }}\r\n                            placeholder={\"חיפוש לפי שם \"}\r\n                            onResultSelect={(e, data) => {\r\n                                let selected = this.state.pepole.find((row) => row.id === data.result.id);\r\n                                const cell_key = `${this.state.selected_row_i + 1} ${this.convert_col_num(this.state.selected_col_i)}`;\r\n                                //selected.places_count--;\r\n                                //selected.point_on_map = cell_key\r\n\r\n                                document.querySelector(\".results\").dispatchEvent(new KeyboardEvent('keydown', {\r\n                                    code: 'Tab',\r\n                                    key: 'Tab',\r\n                                    charCode: 9,\r\n                                    keyCode: 9,\r\n                                    view: window,\r\n                                    bubbles: true\r\n                                }))\r\n\r\n                                this.state.sheet_map.cellText(this.state.selected_row_i, this.state.selected_col_i, `${selected.first_name} ${selected.last_name}`)\r\n\r\n                                document.querySelector(\".results\").style.display = 'none';\r\n                                this.setState({\r\n                                    search_value: \"\",\r\n                                    sum_places: --this.state.sum_places\r\n                                });\r\n                                this.state.sheet_map.reRender();\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"pepole-list-ddl\">\r\n                        <Dropdown\r\n                            selection\r\n                            options={this.state.pepole_lists_options}\r\n                            value={this.state.pepole_list_selected ? this.state.pepole_list_selected.value : ''}\r\n                            onChange={this.changePepoleList}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"bottuns-row\">\r\n                        <Button onClick={this.saveChanges} color={'yellow'}\r\n                        >\r\n                            שמירה\r\n                                            <Icon name='save outline' />\r\n                        </Button>\r\n                        {this.state.cell_range != null && this.state.tur_selected == null &&\r\n                            <Button onClick={() => this.setState({ openSelectedTurModel: true })} color={'yellow'}\r\n                            >\r\n                                סמן טור\r\n                                            <Icon name='bookmark' />\r\n                            </Button>\r\n                        }\r\n                        {this.state.cell_range != null && this.state.tur_selected != null &&\r\n                            <Button onClick={this.delete_tur} color={'yellow'}\r\n                            >\r\n                                מחק טור\r\n                                            <Icon name='bookmark' />\r\n                            </Button>\r\n                        }\r\n\r\n\r\n                        <Route render={({ history }) => (\r\n                            <Button onClick={() => {\r\n                                history.push('/list')\r\n                            }} color={'yellow'}\r\n                            >\r\n                                מעבר לרשימות\r\n                                <Icon name='list' />\r\n                            </Button>\r\n                        )} />\r\n                        <Label className=\"places-label\">\r\n                            מס' מקומות שנותרו לסידור\r\n                            <Label.Detail>{this.state.sum_places}</Label.Detail>\r\n                        </Label>\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    {this.state.error != null &&\r\n                        <Message\r\n                            error\r\n                            header=' שגיאה '\r\n                            content={this.state.error}\r\n                        />\r\n                    }\r\n                    {this.state.message != null &&\r\n                        <Message\r\n                            info\r\n                            header=' '\r\n                            content={this.state.message}\r\n                        />\r\n                    }\r\n                    <div id=\"x-spreadsheet-map\"></div>\r\n                </section>\r\n                <Modal\r\n                    closeIcon={true} dimmer={'blurring'}\r\n                    onClose={() => {\r\n                        this.setState({ openSelectedTurModel: false });\r\n                    }}\r\n                    open={this.state.openSelectedTurModel}\r\n                    className='export-modal'\r\n                >\r\n                    <Modal.Header>תן שם לקבוצת התאים המסומנת, הטור במפה ירשם לפי שם זה</Modal.Header>\r\n                    <Modal.Content>\r\n                        <Form>\r\n                            <Button disabled={this.state.tur_name === \"\"} onClick={() => {\r\n                                if (this.state.cell_range.sri === 0) {\r\n                                    this.setState({\r\n                                        openSelectedTurModel: false,\r\n                                        error: \"השורה שמעל הטור שסימנת לא פנויה, רד שורה כדי לאפשר כותרת\"\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    let turim = this.state.turim;\r\n\r\n                                    if (turim.find(t => t.tur_name === this.state.tur_name)) {\r\n                                        this.setState({\r\n                                            openSelectedTurModel: false,\r\n                                            error: \"השם שבחרת לטור כבר קיים\"\r\n                                        })\r\n                                    }\r\n                                    else {\r\n                                        turim.push({ tur_name: this.state.tur_name, cell_range: this.state.cell_range })\r\n\r\n                                        let data = this.state.data;\r\n                                        //paint background on map\r\n                                        if (!data) {\r\n                                            data = {};\r\n                                            data.name = this.state.sheet_map.datas[0].name;\r\n                                            data.freeze = \"A1\";\r\n                                            data.styles = [];\r\n                                            data.merges = [];\r\n                                            data.rows = {};\r\n                                            data.cols = { \"len\": 22 };\r\n                                            data.validations = [];\r\n                                            data.autofilter = {};\r\n                                        }\r\n                                        //insert header\r\n                                        data.merges.push(`${this.numToSSColumn(this.state.cell_range.sci + 1)}:${this.state.cell_range.sri - 1}, ${this.numToSSColumn(this.state.cell_range.eci + 1)}:${this.state.cell_range.sri - 1}`);\r\n                                        if (!data.rows[this.state.cell_range.sri - 1])\r\n                                            data.rows[this.state.cell_range.sri - 1] = {};\r\n                                        if (!data.rows[this.state.cell_range.sri - 1].cells)\r\n                                            data.rows[this.state.cell_range.sri - 1].cells = {}\r\n                                        if (!data.rows[this.state.cell_range.sri - 1].cells[this.state.cell_range.sci])\r\n                                            data.rows[this.state.cell_range.sri - 1].cells[this.state.cell_range.sci] = {}\r\n                                        data.rows[this.state.cell_range.sri - 1].cells[this.state.cell_range.sci].merge = [0, this.state.cell_range.eci - this.state.cell_range.sci];\r\n\r\n                                        data.styles.push({ bgcolor: '#e7e5e6', font: { size: 14 }, color: \"white\" });\r\n                                        data.rows[this.state.cell_range.sri - 1].cells[this.state.cell_range.sci].style = data.styles.length - 1\r\n                                        data.rows[this.state.cell_range.sri - 1].cells[this.state.cell_range.sci].text = this.state.tur_name;\r\n\r\n                                        //change bg_color to all selected cells\r\n                                        data.styles.push({ \"bgcolor\": \"#deeaf6\" });\r\n                                        for (let start_row = this.state.cell_range.sri; start_row <= this.state.cell_range.eri; start_row++) {\r\n                                            if (!data.rows[start_row]) {\r\n                                                data.rows[start_row] = { cells: {} }\r\n                                            }\r\n                                            let cells = data.rows[start_row].cells;\r\n                                            for (let start_cell = this.state.cell_range.sci; start_cell <= this.state.cell_range.eci; start_cell++) {\r\n                                                if (!cells[start_cell])\r\n                                                    cells[start_cell] = {};\r\n                                                if (!cells[start_cell].style)\r\n                                                    cells[start_cell].style = data.styles.length - 1;\r\n                                            }\r\n                                        }\r\n                                        this.state.sheet_map.loadData(data);\r\n                                        this.setState({\r\n                                            turim: turim,\r\n                                            tur_name: \"\", cell_range: null, openMarkModel: false,\r\n                                            data: data\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }}>\r\n                                שמירה\r\n                            </Button>\r\n                            &nbsp; &nbsp; &nbsp;\r\n                            <Input placeholder=\"שם הטור\" onChange={(e) => {\r\n                                this.setState({ tur_name: e.target.value })\r\n                            }}></Input>\r\n                        </Form>\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}","D:\\Apps\\makom\\ui\\src\\components\\NMap.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"import React from 'react';\r\nimport {\r\n    Dimmer,\r\n    Sidebar,\r\n    Dropdown,\r\n    Loader,\r\n    List,\r\n} from 'semantic-ui-react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../index.css';\r\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\r\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\r\nimport ReactTooltip from 'react-tooltip';\r\n// import { Toolbar } from './Toolbar';\r\nimport { CompactPicker } from 'react-color';\r\nimport { get_lists_data } from '../services/map.service';\r\n\r\nexport class NMapPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selected_keys: [0],\r\n            mouse_click: false,\r\n            turim: [],\r\n            merge_cells: [],\r\n            cells_style: [],\r\n            text_cells: [],\r\n            display_fontsize_dropdown: 'none',\r\n            display_text_color_dropdown: 'none',\r\n            display_bg_color_dropdown: 'none',\r\n            display_h_align_dropdown: 'none',\r\n            display_v_align_dropdown: 'none',\r\n            sidebar_visible: false,\r\n            pepole_list_data: [],\r\n            pepole_data: [],\r\n            selected_year: '',\r\n            selected_time: '',\r\n            selected_gender: '',\r\n            selected_pepole_data: [],\r\n        }\r\n    }\r\n\r\n    number_of_cells = 5000;\r\n\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            // document.addEventListener(\"keydown\", this.key_press.bind(this));\r\n            let user = localStorage.getItem('user_data');\r\n            if (!user) {\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                    }}\r\n                />\r\n            }\r\n            user = JSON.parse(user).user;\r\n            const res = await get_lists_data(user);\r\n            if (res.status === 200) {\r\n                this.setState({ pepole_list_data: res.data.pepole_lists, pepole_data: res.data.pepole })\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    render_coulmn = (key) => {\r\n        return <div key={key} tabIndex=\"0\" className={this.state.selected_keys.includes(key) ? \"selected\" : \"td\"}\r\n            style={this.get_style(key)}\r\n            onMouseUp={() => { this.setState({ mouse_click: false }) }}\r\n            onMouseDown={() => this.cell_selected(key)}\r\n            onMouseOver={() => this.handle_mouse_over_out(key, true)}\r\n            onMouseOut={() => this.handle_mouse_over_out(key, false)}\r\n            onKeyDown={(event) => {\r\n                let text_cells = this.state.text_cells;\r\n                const cell_key = this.state.selected_keys[0];\r\n                let text_cell = text_cells.find(c => c.key === cell_key);\r\n                if ((event.which >= 48 && event.which <= 57) || (event.which >= 65 && event.which <= 90)\r\n                    || (event.which >= 97 && event.which <= 122) || (event.which >= 128 && event.which <= 155)) {\r\n                    if (!text_cell) {\r\n                        text_cell = { key: cell_key, text: '', selected_pepole: null };\r\n                        text_cells.push(text_cell)\r\n                    }\r\n                    text_cell.text += event.key;\r\n                    this.setState({ text_cells: text_cells })\r\n                }\r\n                if (event.which == 8) { //backspace\r\n                    if (text_cell && text_cell.text.length > 0) {\r\n                        text_cell.text = text_cell.text.slice(0, -1)\r\n                    }\r\n                    this.setState({ text_cells: text_cells })\r\n                }\r\n            }}\r\n        >\r\n            {this.get_text(key)}\r\n        </div>\r\n    }\r\n\r\n    render_merge_coulmn = (key, merge) => {\r\n        const selected_key = this.state.selected_keys.includes(key)\r\n        let style = this.get_style(key);\r\n        style.height = `${(merge.height * 40) - 2}px`\r\n        style.width = `${(merge.width * 100) - 2}px`\r\n        style.zIndex = 20\r\n        style.position = 'relative'\r\n        style.border = selected_key ? '3px solid #4B89FF' : '1px solid #A5A5A5';\r\n        style.backgroundColor = selected_key ? '#EDF3FF' : style.backgroundColor ? style.backgroundColor : '#fff'\r\n        // style.padding= '1em';\r\n        // style.margin = '-2px'\r\n        console.log(merge)\r\n\r\n        return <div className={\"td -row-span-2\"}>\r\n            <div key={key}\r\n                style={style}\r\n                onMouseUp={() => { this.setState({ mouse_click: false }) }}\r\n                onMouseDown={() => this.cell_selected(key)}\r\n                onMouseOver={() => this.handle_mouse_over_out(key, true)}\r\n                onMouseOut={() => this.handle_mouse_over_out(key, false)}\r\n                onKeyDown={(event) => {\r\n                    let text_cells = this.state.text_cells;\r\n                    const cell_key = this.state.selected_keys[0];\r\n                    let text_cell = text_cells.find(c => c.key === cell_key);\r\n                    if ((event.which >= 48 && event.which <= 57) || (event.which >= 65 && event.which <= 90)\r\n                        || (event.which >= 97 && event.which <= 122) || (event.which >= 128 && event.which <= 155)) {\r\n                        if (!text_cell) {\r\n                            text_cell = { key: cell_key, text: '', selected_pepole: null };\r\n                            text_cells.push(text_cell)\r\n                        }\r\n                        text_cell.text += event.key;\r\n                        this.setState({ text_cells: text_cells })\r\n                    }\r\n                    if (event.which == 8) { //backspace\r\n                        if (text_cell && text_cell.text.length > 0) {\r\n                            text_cell.text = text_cell.text.slice(0, -1)\r\n                        }\r\n                        this.setState({ text_cells: text_cells })\r\n                    }\r\n                }}\r\n            >\r\n                {this.get_text(key)}\r\n                {/* {key} */}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render_grid = () => {\r\n        let coulmns = [];\r\n        for (let key = 0; key < this.number_of_cells; key++) {\r\n            const merge = this.state.merge_cells.find(m => m.key === key);\r\n            coulmns.push(\r\n                merge ? this.render_merge_coulmn(key, merge) :\r\n                    this.render_coulmn(key)\r\n            );\r\n        }\r\n        return coulmns;\r\n    }\r\n\r\n    get_style = (key) => {\r\n        const selected_style = this.state.cells_style.find(s => s.key === key);\r\n        if (!selected_style)\r\n            return {};\r\n        return { ...selected_style };\r\n    }\r\n\r\n    get_text = (key) => {\r\n        const text_cell = this.state.text_cells.find(c => c.key === key);\r\n        if (!text_cell)\r\n            return '';\r\n        if (text_cell.selected_pepole)\r\n            return text_cell.selected_pepole.name\r\n        return text_cell.text;\r\n    }\r\n\r\n    insert_style = (style_key, style_value) => {\r\n        let cells_style = this.state.cells_style;\r\n\r\n        for (let index = 0; index < this.state.selected_keys.length; index++) {\r\n            let cell_style = cells_style.find(c => c.key === this.state.selected_keys[index])\r\n\r\n            if (!cell_style) {\r\n                cell_style = { key: this.state.selected_keys[index] }\r\n                cell_style[style_key] = style_value;\r\n                cells_style.push(cell_style)\r\n            }\r\n            else {\r\n                cell_style[style_key] = style_value;\r\n            }\r\n        }\r\n        this.setState({ cells_style: cells_style });\r\n    }\r\n\r\n    cell_selected = (key) => {\r\n        const selected_key = key;\r\n        this.setState({ selected_keys: [selected_key], mouse_click: true })\r\n    }\r\n\r\n    handle_mouse_over_out = (key, over) => {\r\n        const rows = this.number_of_cells / 100;\r\n        const coulmns_in_row = 50;\r\n\r\n        if (this.state.mouse_click) {\r\n            let selected_keys = this.state.selected_keys;\r\n            const start = selected_keys[0];\r\n            const start_row = Math.floor(start / rows);\r\n            const end_row = Math.floor(key / rows);\r\n\r\n            const start_coulmn = start % coulmns_in_row;\r\n            const end_coulmn = key % coulmns_in_row;\r\n\r\n            if (start_row < end_row) {\r\n                for (let row = start_row; row <= end_row; row++) {\r\n                    if (start_coulmn < end_coulmn) {\r\n                        for (let coulmn = start_coulmn; coulmn <= end_coulmn; coulmn++) {\r\n                            this.push_to_arr_if_not_exist(selected_keys, (row * coulmns_in_row) + coulmn)\r\n                        }\r\n                    }\r\n                    if (start_coulmn > end_coulmn) {\r\n                        for (let coulmn = end_coulmn; coulmn <= start_coulmn; coulmn++) {\r\n                            this.push_to_arr_if_not_exist(selected_keys, (row * coulmns_in_row) + coulmn)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (start_row > end_row) {\r\n                for (let row = end_row; row <= start_row; row++) {\r\n                    if (start_coulmn < end_coulmn) {\r\n                        for (let coulmn = start_coulmn; coulmn <= end_coulmn; coulmn++) {\r\n                            this.push_to_arr_if_not_exist(selected_keys, (row * coulmns_in_row) + coulmn)\r\n                        }\r\n                    }\r\n                    if (start_coulmn > end_coulmn) {\r\n                        for (let coulmn = end_coulmn; coulmn <= start_coulmn; coulmn++) {\r\n                            this.push_to_arr_if_not_exist(selected_keys, (row * coulmns_in_row) + coulmn)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.push_to_arr_if_not_exist(selected_keys, key);\r\n            selected_keys = this.remove_anneccery_keys(selected_keys, start_row, end_row, start_coulmn, end_coulmn);\r\n            this.setState({ selected_keys: selected_keys })\r\n            console.log(this.state.selected_keys)\r\n        }\r\n    }\r\n\r\n    remove_anneccery_keys = (selected_keys, start_row, end_row, start_coulmn, end_coulmn) => {\r\n        const rows = this.number_of_cells / 100;\r\n        const coulmns_in_row = 50;\r\n        let arr = [];\r\n        for (let index = 0; index < selected_keys.length; index++) {\r\n            const r = Math.floor(selected_keys[index] / rows);\r\n            if ((r >= start_row && r <= end_row) || (r >= end_row && r <= start_row)) {\r\n\r\n            }\r\n            else {\r\n                arr.push(selected_keys[index])\r\n            }\r\n        }\r\n        selected_keys = selected_keys.filter(key => !arr.includes(key));\r\n        arr = [];\r\n        for (let index = 0; index < selected_keys.length; index++) {\r\n            const c = selected_keys[index] % coulmns_in_row\r\n            if ((c >= start_coulmn && c <= end_coulmn) || (c >= end_coulmn && c <= start_coulmn)) {\r\n\r\n            }\r\n            else {\r\n                arr.push(selected_keys[index])\r\n            }\r\n        }\r\n        selected_keys = selected_keys.filter(key => !arr.includes(key));\r\n        return selected_keys;\r\n    }\r\n\r\n    push_to_arr_if_not_exist = (arr, val) => {\r\n        if (!arr.includes(val))\r\n            arr.push(val);\r\n        return arr;\r\n    }\r\n\r\n    remove_from_arr = (arr, key) => {\r\n        const index = arr.indexOf(key);\r\n        if (index > -1) {\r\n            arr.splice(index, 1);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    key_press = (e) => {\r\n        if (e.key == \"ArrowRight\" || e.key == \"ArrowLeft\" || e.key == \"ArrowUp\" || e.key == \"ArrowDown\") {\r\n            const selected_keys = this.state.selected_keys;\r\n            let selected_key = selected_keys[selected_keys.length - 1];\r\n            const row = this.number_of_cells / 100;\r\n            switch (e.key) {\r\n                case \"ArrowRight\":\r\n                    selected_key = selected_key + 1;\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                    selected_key = selected_key != 0 ? selected_key - 1 : selected_key;\r\n                    break;\r\n                case \"ArrowUp\":\r\n                    selected_key = selected_key >= row ? selected_key - row : selected_key;\r\n                    break;\r\n                case \"ArrowDown\":\r\n                    selected_key = selected_key < this.number_of_cells - row ? selected_key + row : selected_key;\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            this.setState({ selected_keys: [selected_key] })\r\n        }\r\n    }\r\n\r\n    create_toast = (message) => {\r\n        toast({\r\n            type: 'warning',\r\n            icon: '',\r\n            title: 'שים לב',\r\n            description: message,\r\n            animation: 'bounce',\r\n            time: 5000,\r\n        });\r\n    }\r\n\r\n    mark_cells = () => {\r\n        const selected_keys = this.state.selected_keys;\r\n        let turim = this.state.turim;\r\n        for (let index = 0; index < selected_keys.length; index++) {\r\n            turim = this.push_to_arr_if_not_exist(turim, selected_keys[index]);\r\n        }\r\n        this.setState({\r\n            turim: turim,\r\n            selected_keys: [],\r\n        })\r\n    }\r\n\r\n    unmark_cells = () => {\r\n        const selected_keys = this.state.selected_keys;\r\n        let turim = this.state.turim\r\n        for (let index = 0; index < selected_keys.length; index++) {\r\n            turim = this.remove_from_arr(turim, selected_keys[index]);\r\n        }\r\n        this.setState({\r\n            turim: turim,\r\n            selected_keys: [],\r\n        })\r\n    }\r\n\r\n    _show_sidebar = () => {\r\n        this.setState({ sidebar_visible: true });\r\n    }\r\n\r\n    _get_years = () => {\r\n        return this.state.pepole_list_data.length > 0 ? this.state.pepole_list_data.map((p, index) => {\r\n            return { key: index, value: p.id, text: p.name }\r\n        }) : [];\r\n    }\r\n\r\n    _change_selected_pepole_data = () => {\r\n        let pepole_data = this.state.pepole_data.filter(p => p.pepole_list_id === this.state.selected_year);\r\n        let men = false;\r\n        let rosh_hashana = false;\r\n\r\n        if (this.state.selected_gender === 'men') {\r\n            men = true;\r\n            if (this.state.selected_time === \"rosh_ashana\") {\r\n                rosh_hashana = true;\r\n                pepole_data = pepole_data.filter(p => p.mens_rosh_ashana)\r\n            }\r\n            if (this.state.selected_time === \"kipur\") {\r\n                pepole_data = pepole_data.filter(p => p.mens_kipur)\r\n            }\r\n        }\r\n        if (this.state.selected_gender === 'women') {\r\n            if (this.state.selected_time === \"rosh_ashana\") {\r\n                rosh_hashana = true;\r\n                pepole_data = pepole_data.filter(p => p.womens_rosh_ashana)\r\n            }\r\n            if (this.state.selected_time === \"kipur\") {\r\n                pepole_data = pepole_data.filter(p => p.womens_kipur)\r\n            }\r\n        }\r\n        pepole_data = pepole_data.map(p => {\r\n            if (men) {\r\n                if (rosh_hashana)\r\n                    return { key: p.id, name: `הרב ${p.first_name} ${p.last_name}`, value: p.mens_rosh_ashana }\r\n                else\r\n                    return { key: p.id, name: `הרב ${p.first_name} ${p.last_name}`, value: p.mens_kipur }\r\n            }\r\n            else {\r\n                if (rosh_hashana)\r\n                    return { key: p.id, name: `גברת ${p.last_name}`, value: p.womens_rosh_ashana }\r\n                else\r\n                    return { key: p.id, name: `גברת ${p.last_name}`, value: p.womens_kipur }\r\n            }\r\n        })\r\n        this.setState({ selected_pepole_data: pepole_data, sidebar_visible: true });\r\n    }\r\n\r\n    _get_selected_font_size = () => {\r\n        const key = this.state.selected_keys[0];\r\n        if (key) {\r\n            const selected_cell_style = this.state.cells_style.find(c => c.key == key);\r\n            if (selected_cell_style && selected_cell_style['fontSize'])\r\n                return selected_cell_style['fontSize'].replace('px', '')\r\n            else\r\n                return 14\r\n        }\r\n        return 14;\r\n    }\r\n\r\n    is_selcted_cell_styled = (style_key, style_value) => {\r\n        const key = this.state.selected_keys[0];\r\n        if (key) {\r\n            const selected_cell_style = this.state.cells_style.find(c => c.key == key);\r\n            if (selected_cell_style && selected_cell_style[style_key] && selected_cell_style[style_key] == style_value)\r\n                return true\r\n            else\r\n                return false\r\n        }\r\n        return false;\r\n    }\r\n\r\n    _get_selected_cell_style = (style_key) => {\r\n        const key = this.state.selected_keys[0];\r\n        if (key) {\r\n            const selected_cell_style = this.state.cells_style.find(c => c.key == key);\r\n            if (selected_cell_style && selected_cell_style[style_key])\r\n                return selected_cell_style[style_key]\r\n            else\r\n                return ''\r\n        }\r\n        return '';\r\n    }\r\n\r\n    render() {\r\n        const times_options = [{ key: 'rosh_ashana', value: 'rosh_ashana', text: \"ראש השנה\" }, { key: 'kipur', value: 'kipur', text: \"יום כיפור\" }]\r\n        const gender_options = [{ key: 'men', value: 'men', text: 'גברים' }, { key: 'women', value: 'women', text: 'נשים' }]\r\n        const font_color = this._get_selected_cell_style('color');\r\n        const bg_color = this._get_selected_cell_style('backgroundColor');\r\n        return (\r\n            <div >\r\n                <Dimmer active={this.state.isLoading}>\r\n                    <Loader size=\"large\">נא המתן...</Loader>\r\n                </Dimmer>\r\n                <SemanticToastContainer position=\"top-left\" />\r\n                <div style={{ width: '100%' }}>\r\n                    <section className=\"functions-row\">\r\n                        <div className=\"bottuns-row\">\r\n                            <Dropdown selection placeholder='שנה'\r\n                                onChange={(event, data) => {\r\n                                    this.setState({ selected_year: data.value }, () => {\r\n                                        if (this.state.selected_year != '' && this.state.selected_time != '' && this.state.selected_gender != '')\r\n                                            this._change_selected_pepole_data();\r\n                                    })\r\n                                }} options={this._get_years()} />\r\n                            <Dropdown selection placeholder='ר\"ה\\יוהכ\"פ' options={times_options} onChange={(event, data) => {\r\n                                this.setState({ selected_time: data.value }, () => {\r\n                                    if (this.state.selected_year != '' && this.state.selected_time != '' && this.state.selected_gender != '')\r\n                                        this._change_selected_pepole_data();\r\n                                })\r\n                            }} />\r\n                            <Dropdown selection placeholder='גברים\\נשים' options={gender_options} onChange={(event, data) => {\r\n                                this.setState({ selected_gender: data.value }, () => {\r\n                                    if (this.state.selected_year != '' && this.state.selected_time != '' && this.state.selected_gender != '')\r\n                                        this._change_selected_pepole_data();\r\n                                })\r\n                            }} />\r\n                            {/* <Button onClick={this.saveChanges} color={'yellow'}\r\n                            >\r\n                                שמירה\r\n                                <Icon name='save outline' />\r\n                            </Button>\r\n                            {this.state.selected_keys.some(cell => !this.state.turim.includes(cell)) &&\r\n                                <Button onClick={() => this.mark_cells()} color={'yellow'}\r\n                                >\r\n                                    סמן\r\n                                    <Icon name='bookmark' />\r\n                                </Button>\r\n                            }\r\n                            {this.state.selected_keys.some(cell => this.state.turim.includes(cell)) &&\r\n                                <Button onClick={this.unmark_cells} color={'yellow'}\r\n                                >\r\n                                    מחק סימון\r\n                                    <Icon name='bookmark' />\r\n                                </Button>\r\n                            }\r\n                            <Route render={({ history }) => (\r\n                                <Button onClick={() => {\r\n                                    history.push('/list')\r\n                                }} color={'yellow'}\r\n                                >\r\n                                    מעבר לרשימות\r\n                                    <Icon name='list' />\r\n                                </Button>\r\n                            )} />\r\n                            <Button onClick={() => {\r\n                                let sidebar_visible = this.state.sidebar_visible ? false : true;\r\n                                this.setState({ sidebar_visible: sidebar_visible })\r\n                            }} color={'yellow'}\r\n                            >\r\n                                רשימת מתפללים\r\n                                <Icon name='list' />\r\n                            </Button> */}\r\n                            {/* <Popup content={'רשימת מתפללים'}\r\n                                inverted\r\n                                style={{ borderRadius: 5, opacity: 0.8, pointerEvents: 'none' }}\r\n                                trigger={<Button\r\n                                    onClick={this._show_sidebar}\r\n                                    color={'yellow'}\r\n                                    icon=\"list\"\r\n                                />}\r\n                            /> */}\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <Sidebar.Pushable>\r\n                    <Sidebar icon=\"labeled\" style={{ textAlign: 'center' }} selection divided relaxed direction={'right'} as={List}\r\n                        visible={this.state.sidebar_visible} >\r\n                        {\r\n                            this.state.selected_pepole_data.map(s =>\r\n                                <List.Item value={s.key} onClick={(event, data) => {\r\n                                    const key = data.value\r\n                                    let selected_pepole_data = this.state.selected_pepole_data;\r\n                                    let text_cells = this.state.text_cells;\r\n                                    let selected_pepole = selected_pepole_data.find(p => p.key == key)\r\n                                    if (selected_pepole.value > 0) {\r\n                                        selected_pepole.value--;\r\n\r\n                                        if (this.state.selected_keys.length == 1) {\r\n                                            const cell_key = this.state.selected_keys[0];\r\n                                            let selected_text_cell = text_cells.find(c => c.key === cell_key);\r\n                                            if (selected_text_cell) {\r\n                                                if (selected_text_cell.selected_pepole) {\r\n                                                    selected_pepole_data.find(p => p.key == selected_text_cell.selected_pepole.key).value++;\r\n                                                }\r\n                                                selected_text_cell.selected_pepole = selected_pepole;\r\n                                            }\r\n                                            else {\r\n                                                selected_text_cell = { key: cell_key, text: '', selected_pepole: selected_pepole }\r\n                                                text_cells.push(selected_text_cell);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    this.setState({ selected_pepole_data: selected_pepole_data, text_cells: text_cells })\r\n                                }}>\r\n                                    {`${s.name} : ${s.value}`}\r\n                                </List.Item>\r\n                            )\r\n                        }\r\n                    </Sidebar>\r\n                    <Sidebar.Pusher>\r\n                        <div className=\"toolbar\">\r\n                            <div className=\"toolbar-btns\">\r\n                                <div className=\"toolbar-btn\" data-type=\"light\" data-tip=\"נקה עיצוב\" data-place=\"bottom\" onClick={() => {\r\n                                    let cells_style = this.state.cells_style;\r\n                                    for (let index = 0; index < this.state.selected_keys.length; index++) {\r\n                                        const key = this.state.selected_keys[index];\r\n                                        cells_style = cells_style.filter(c => c.key != key);\r\n                                    }\r\n                                    this.setState({ cells_style: cells_style })\r\n                                }}>\r\n                                    <div className=\"toolbar-btn-icon\">\r\n                                        <div className=\"toolbar-btn-icon-img clearformat\" ></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"toolbar-btn\" data-type=\"light\" data-tip=\"גודל גופן\" data-place=\"bottom\" onClick={() => {\r\n                                    this.setState({\r\n                                        display_fontsize_dropdown: this.state.display_fontsize_dropdown === 'none' ?\r\n                                            'block' : 'none'\r\n                                    })\r\n                                }}>\r\n                                    <div className=\"x-spreadsheet-dropdown bottom-left\">\r\n                                        <div className=\"x-spreadsheet-dropdown-header\">\r\n                                            <div className=\"x-spreadsheet-dropdown-title\">\r\n                                                {\r\n                                                    this._get_selected_font_size()\r\n                                                }</div>\r\n                                            <div className=\"x-spreadsheet-icon arrow-right\">\r\n                                                <div className=\"x-spreadsheet-icon-img arrow-down\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"x-spreadsheet-dropdown-content\" style={{ width: '60px', display: this.state.display_fontsize_dropdown }}>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '7.5px')}>7.5</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '8px')}>8</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '9px')}>9</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '10px')}>10</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '10.5px')}>10.5</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '11px')}>11</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '12px')}>12</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '14px')}>14</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '15px')}>15</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '16px')}>16</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '18px')}>18</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '22px')}>22</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '24px')}>24</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '26px')}>26</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '36px')}>36</div>\r\n                                            <div className=\"x-spreadsheet-item\" onClick={() => this.insert_style('fontSize', '42px')}>42</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"x-spreadsheet-toolbar-divider\"></div>\r\n                                <div className={this.is_selcted_cell_styled('fontWeight', 'bold') ? \"toolbar-btn active\" : \"toolbar-btn\"}\r\n                                    data-type=\"light\" data-tip=\"הדגשה (ctrl + b)\" data-place=\"bottom\" onClick={() => {\r\n                                        let display_bold = !this.is_selcted_cell_styled('fontWeight', 'bold');\r\n                                        let value = display_bold ? \"bold\" : \"normal\";\r\n                                        this.insert_style(\"fontWeight\", value);\r\n                                    }}>\r\n                                    <div className=\"x-spreadsheet-icon\">\r\n                                        <div className=\"x-spreadsheet-icon-img font-bold\" ></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={this.is_selcted_cell_styled('fontStyle', 'italic') ? \"toolbar-btn active\" : \"toolbar-btn\"} data-tip=\"הטייה (ctrl + i)\" data-place=\"bottom\"\r\n                                    data-type=\"light\" onClick={() => {\r\n                                        let italic = !this.is_selcted_cell_styled('fontStyle', 'italic');\r\n                                        let value = italic ? \"italic\" : \"normal\";\r\n                                        this.insert_style(\"fontStyle\", value);\r\n                                    }}>\r\n                                    <div className=\"toolbar-btn-icon\">\r\n                                        <div className=\"toolbar-btn-icon-img fontitalic\" ></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={this.is_selcted_cell_styled('textDecorationLine', 'underline') ? \"toolbar-btn active\" : \"toolbar-btn\"} data-tip=\"קו תחתון (ctrl + u)\" data-place=\"bottom\"\r\n                                    data-type=\"light\" onClick={() => {\r\n                                        let underline = !this.is_selcted_cell_styled('textDecorationLine', 'underline');\r\n                                        let value = underline ? \"underline\" : \"none\";\r\n                                        this.insert_style(\"textDecorationLine\", value);\r\n                                    }} >\r\n                                    <div className=\"toolbar-btn-icon\">\r\n                                        <div className=\"toolbar-btn-icon-img undeline\" ></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"toolbar-btn\" data-tip=\"צבע טקסט\" data-place=\"bottom\"\r\n                                    data-type=\"light\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            display_text_color_dropdown: this.state.display_text_color_dropdown === 'none' ?\r\n                                                'block' : 'none'\r\n                                        })\r\n                                    }}>\r\n                                    <div className=\"toolbar-dropdown bottom-left\">\r\n                                        <div className=\"toolbar-dropdown-header\" >\r\n                                            <div className=\"x-spreadsheet-icon\" style={{\r\n                                                height: '16px', borderBottom: '3px solid ' +\r\n                                                    `${font_color == '' ? 'rgb(10, 10, 10)' : font_color} `\r\n                                            }}>\r\n                                                <div className=\"x-spreadsheet-icon-img color\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"toolbar-dropdown-content\" style={{ width: 'auto', display: this.state.display_text_color_dropdown }}>\r\n                                            <CompactPicker onChangeComplete={(color) => {\r\n                                                this.insert_style(\"color\", color.hex);\r\n                                            }}></CompactPicker>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"toolbar-btn\" data-tip=\"צבע תא\" data-place=\"bottom\"\r\n                                    data-type=\"light\"\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            display_bg_color_dropdown: this.state.display_bg_color_dropdown === 'none' ?\r\n                                                'block' : 'none'\r\n                                        })\r\n                                    }}>\r\n                                    <div className=\"toolbar-dropdown bottom-left\">\r\n                                        <div className=\"toolbar-dropdown-header\" >\r\n                                            <div className=\"x-spreadsheet-icon\" style={{\r\n                                                height: '16px', borderBottom: '3px solid ' +\r\n                                                    `${bg_color == '' ? 'rgb(10, 10, 10)' : bg_color} `\r\n                                            }}>\r\n                                                <div className=\"x-spreadsheet-icon-img bgcolor\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"toolbar-dropdown-content\" style={{ width: 'auto', display: this.state.display_bg_color_dropdown }}>\r\n                                            <CompactPicker onChangeComplete={(color) => {\r\n                                                this.insert_style(\"backgroundColor\", color.hex);\r\n                                            }}></CompactPicker>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"toolbar-btn\" data-tip=\"אחד תאים\" data-place=\"bottom\"\r\n                                    data-type=\"light\" onClick={() => {\r\n                                        if (this.state.selected_keys.length > 1) {\r\n                                            const selected_keys_array = this.state.selected_keys.sort();\r\n                                            const min_key = selected_keys_array[0];\r\n                                            const max_key = selected_keys_array[selected_keys_array.length - 1];\r\n                                            let merge_arr = this.state.merge_cells;\r\n                                            const width = (max_key - min_key) / 100 + \"\".split('.')[1];\r\n                                            console.log(width);\r\n                                            merge_arr.push({\r\n                                                key: min_key, width: 1,\r\n                                                height: (Math.floor(max_key / 50) - Math.floor(min_key / 50)) + 1\r\n                                            })\r\n                                            this.setState({ merge_cells: merge_arr, selected_keys: [0] })\r\n                                        }\r\n                                    }}>\r\n                                    <div className=\"x-spreadsheet-icon\">\r\n                                        <div className=\"x-spreadsheet-icon-img merge\">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"x-spreadsheet-toolbar-divider\"></div>\r\n                                <div className=\"toolbar-btn\" onClick={() => {\r\n                                    this.setState({\r\n                                        display_h_align_dropdown: this.state.display_h_align_dropdown === 'none' ?\r\n                                            'block' : 'none'\r\n                                    })\r\n                                }}>\r\n                                    <div className=\"x-spreadsheet-dropdown bottom-left\">\r\n                                        <div className=\"x-spreadsheet-dropdown-header\">\r\n                                            <div className=\"x-spreadsheet-icon arrow-left\">\r\n                                                <div className=\"x-spreadsheet-icon-img align-center\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"x-spreadsheet-icon arrow-right\">\r\n                                                <div className=\"x-spreadsheet-icon-img arrow-down\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"x-spreadsheet-dropdown-content\" style={{ width: \"auto\", display: this.state.display_h_align_dropdown }}>\r\n                                            <div className=\"x-spreadsheet-item\"><div className=\"x-spreadsheet-icon\">\r\n                                                <div className=\"x-spreadsheet-icon-img align-left\">\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"x-spreadsheet-item\">\r\n                                                <div className=\"x-spreadsheet-icon\">\r\n                                                    <div className=\"x-spreadsheet-icon-img align-center\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"x-spreadsheet-item\">\r\n                                                <div className=\"x-spreadsheet-icon\">\r\n                                                    <div className=\"x-spreadsheet-icon-img align-right\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"toolbar-btn\" data-tooltip=\"יישור אנכי\" onClick={() => {\r\n                                    this.setState({\r\n                                        display_v_align_dropdown: this.state.display_v_align_dropdown === 'none' ?\r\n                                            'block' : 'none'\r\n                                    })\r\n                                }}>\r\n                                    <div className=\"x-spreadsheet-dropdown bottom-left\">\r\n                                        <div className=\"x-spreadsheet-dropdown-header\">\r\n                                            <div className=\"x-spreadsheet-icon arrow-left\">\r\n                                                <div className=\"x-spreadsheet-icon-img align-middle\">\r\n                                                </div></div><div className=\"x-spreadsheet-icon arrow-right\">\r\n                                                <div className=\"x-spreadsheet-icon-img arrow-down\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"x-spreadsheet-dropdown-content\" style={{ width: 'auto', display: this.state.display_v_align_dropdown }}>\r\n                                            <div className=\"x-spreadsheet-item\">\r\n                                                <div className=\"x-spreadsheet-icon\">\r\n                                                    <div className=\"x-spreadsheet-icon-img align-top\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"x-spreadsheet-item\">\r\n                                                <div className=\"x-spreadsheet-icon\">\r\n                                                    <div className=\"x-spreadsheet-icon-img align-middle\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"x-spreadsheet-item\">\r\n                                                <div className=\"x-spreadsheet-icon\">\r\n                                                    <div className=\"x-spreadsheet-icon-img align-bottom\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <section>\r\n                            <div style={{ width: '100%', overflowX: 'auto', overflowY: 'auto' }}>\r\n                                <div className='resp-table'\r\n                                    onKeyDown={(e) => this.key_press(e)}>\r\n                                    {\r\n                                        this.render_grid()\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </Sidebar.Pusher>\r\n\r\n                </Sidebar.Pushable>\r\n\r\n                <ReactTooltip />\r\n            </div >\r\n        )\r\n    }\r\n}","D:\\Apps\\makom\\ui\\src\\components\\Toolbar.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"D:\\Apps\\makom\\ui\\src\\services\\map.service.js",["357"],"import axios from 'axios';\r\nimport { API, HEADERS } from '../utils/constants';\r\n\r\nexport const get_lists_data = async (user) => {\r\n    return axios.post(`${API}/pepole/get-all`, { token: user.token, pepole_list_id: null })\r\n}",{"ruleId":"358","severity":1,"message":"359","line":24,"column":8,"nodeType":"360","messageId":"361","endLine":24,"endColumn":24},{"ruleId":"362","severity":1,"message":"363","line":132,"column":59,"nodeType":"364","messageId":"365","endLine":132,"endColumn":61},{"ruleId":"362","severity":1,"message":"363","line":137,"column":65,"nodeType":"364","messageId":"365","endLine":137,"endColumn":67},{"ruleId":"362","severity":1,"message":"366","line":157,"column":25,"nodeType":"364","messageId":"365","endLine":157,"endColumn":27},{"ruleId":"362","severity":1,"message":"366","line":157,"column":40,"nodeType":"364","messageId":"365","endLine":157,"endColumn":42},{"ruleId":"362","severity":1,"message":"366","line":157,"column":60,"nodeType":"364","messageId":"365","endLine":157,"endColumn":62},{"ruleId":"362","severity":1,"message":"366","line":173,"column":41,"nodeType":"364","messageId":"365","endLine":173,"endColumn":43},{"ruleId":"362","severity":1,"message":"366","line":188,"column":64,"nodeType":"364","messageId":"365","endLine":188,"endColumn":66},{"ruleId":"362","severity":1,"message":"366","line":246,"column":74,"nodeType":"364","messageId":"365","endLine":246,"endColumn":76},{"ruleId":"362","severity":1,"message":"366","line":247,"column":78,"nodeType":"364","messageId":"365","endLine":247,"endColumn":80},{"ruleId":"367","severity":1,"message":"368","line":294,"column":87,"nodeType":"369","messageId":"365","endLine":294,"endColumn":95},{"ruleId":"362","severity":1,"message":"366","line":343,"column":27,"nodeType":"364","messageId":"365","endLine":343,"endColumn":29},{"ruleId":"362","severity":1,"message":"363","line":345,"column":25,"nodeType":"364","messageId":"365","endLine":345,"endColumn":27},{"ruleId":"362","severity":1,"message":"363","line":375,"column":25,"nodeType":"364","messageId":"365","endLine":375,"endColumn":27},{"ruleId":"370","severity":1,"message":"371","line":688,"column":83,"nodeType":"372","messageId":"373","endLine":688,"endColumn":85},{"ruleId":"362","severity":1,"message":"366","line":689,"column":70,"nodeType":"364","messageId":"365","endLine":689,"endColumn":72},{"ruleId":"362","severity":1,"message":"366","line":689,"column":86,"nodeType":"364","messageId":"365","endLine":689,"endColumn":88},{"ruleId":"362","severity":1,"message":"366","line":689,"column":107,"nodeType":"364","messageId":"365","endLine":689,"endColumn":109},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","replacedBy":"377"},{"ruleId":"374","replacedBy":"378"},{"ruleId":"376","replacedBy":"379"},{"ruleId":"358","severity":1,"message":"380","line":2,"column":8,"nodeType":"360","messageId":"361","endLine":2,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":35,"column":26,"nodeType":"383","messageId":"384","endLine":35,"endColumn":27,"suggestions":"385"},{"ruleId":"381","severity":1,"message":"382","line":35,"column":42,"nodeType":"383","messageId":"384","endLine":35,"endColumn":43,"suggestions":"386"},{"ruleId":"362","severity":1,"message":"363","line":45,"column":68,"nodeType":"364","messageId":"365","endLine":45,"endColumn":70},{"ruleId":"362","severity":1,"message":"363","line":8,"column":26,"nodeType":"364","messageId":"365","endLine":8,"endColumn":28},{"ruleId":"374","replacedBy":"387"},{"ruleId":"376","replacedBy":"388"},{"ruleId":"358","severity":1,"message":"389","line":4,"column":15,"nodeType":"360","messageId":"361","endLine":4,"endColumn":22},{"ruleId":"358","severity":1,"message":"390","line":54,"column":15,"nodeType":"360","messageId":"361","endLine":54,"endColumn":28},{"ruleId":"362","severity":1,"message":"366","line":166,"column":78,"nodeType":"364","messageId":"365","endLine":166,"endColumn":80},{"ruleId":"358","severity":1,"message":"391","line":459,"column":39,"nodeType":"360","messageId":"361","endLine":459,"endColumn":47},{"ruleId":"392","severity":1,"message":"393","line":477,"column":51,"nodeType":"394","endLine":477,"endColumn":61},{"ruleId":"362","severity":1,"message":"363","line":92,"column":33,"nodeType":"364","messageId":"365","endLine":92,"endColumn":35},{"ruleId":"362","severity":1,"message":"363","line":137,"column":37,"nodeType":"364","messageId":"365","endLine":137,"endColumn":39},{"ruleId":"362","severity":1,"message":"363","line":293,"column":19,"nodeType":"364","messageId":"365","endLine":293,"endColumn":21},{"ruleId":"362","severity":1,"message":"363","line":293,"column":44,"nodeType":"364","messageId":"365","endLine":293,"endColumn":46},{"ruleId":"362","severity":1,"message":"363","line":293,"column":68,"nodeType":"364","messageId":"365","endLine":293,"endColumn":70},{"ruleId":"362","severity":1,"message":"363","line":293,"column":90,"nodeType":"364","messageId":"365","endLine":293,"endColumn":92},{"ruleId":"362","severity":1,"message":"366","line":302,"column":49,"nodeType":"364","messageId":"365","endLine":302,"endColumn":51},{"ruleId":"362","severity":1,"message":"363","line":407,"column":80,"nodeType":"364","messageId":"365","endLine":407,"endColumn":82},{"ruleId":"362","severity":1,"message":"363","line":419,"column":80,"nodeType":"364","messageId":"365","endLine":419,"endColumn":82},{"ruleId":"362","severity":1,"message":"363","line":420,"column":105,"nodeType":"364","messageId":"365","endLine":420,"endColumn":107},{"ruleId":"362","severity":1,"message":"363","line":431,"column":80,"nodeType":"364","messageId":"365","endLine":431,"endColumn":82},{"ruleId":"362","severity":1,"message":"366","line":457,"column":70,"nodeType":"364","messageId":"365","endLine":457,"endColumn":72},{"ruleId":"362","severity":1,"message":"366","line":457,"column":104,"nodeType":"364","messageId":"365","endLine":457,"endColumn":106},{"ruleId":"362","severity":1,"message":"366","line":457,"column":140,"nodeType":"364","messageId":"365","endLine":457,"endColumn":142},{"ruleId":"362","severity":1,"message":"366","line":463,"column":66,"nodeType":"364","messageId":"365","endLine":463,"endColumn":68},{"ruleId":"362","severity":1,"message":"366","line":463,"column":100,"nodeType":"364","messageId":"365","endLine":463,"endColumn":102},{"ruleId":"362","severity":1,"message":"366","line":463,"column":136,"nodeType":"364","messageId":"365","endLine":463,"endColumn":138},{"ruleId":"362","severity":1,"message":"366","line":469,"column":66,"nodeType":"364","messageId":"365","endLine":469,"endColumn":68},{"ruleId":"362","severity":1,"message":"366","line":469,"column":100,"nodeType":"364","messageId":"365","endLine":469,"endColumn":102},{"ruleId":"362","severity":1,"message":"366","line":469,"column":136,"nodeType":"364","messageId":"365","endLine":469,"endColumn":138},{"ruleId":"362","severity":1,"message":"363","line":530,"column":96,"nodeType":"364","messageId":"365","endLine":530,"endColumn":98},{"ruleId":"362","severity":1,"message":"363","line":534,"column":77,"nodeType":"364","messageId":"365","endLine":534,"endColumn":79},{"ruleId":"362","severity":1,"message":"363","line":539,"column":90,"nodeType":"364","messageId":"365","endLine":539,"endColumn":92},{"ruleId":"362","severity":1,"message":"366","line":563,"column":85,"nodeType":"364","messageId":"365","endLine":563,"endColumn":87},{"ruleId":"362","severity":1,"message":"363","line":651,"column":67,"nodeType":"364","messageId":"365","endLine":651,"endColumn":69},{"ruleId":"362","severity":1,"message":"363","line":675,"column":65,"nodeType":"364","messageId":"365","endLine":675,"endColumn":67},{"ruleId":"395","severity":1,"message":"396","line":5,"column":5,"nodeType":"397","messageId":"398","endLine":7,"endColumn":6},{"ruleId":"399","severity":1,"message":"400","line":11,"column":48,"nodeType":"401","endLine":11,"endColumn":70},{"ruleId":"399","severity":1,"message":"400","line":47,"column":73,"nodeType":"401","endLine":47,"endColumn":109},{"ruleId":"399","severity":1,"message":"400","line":100,"column":73,"nodeType":"401","endLine":100,"endColumn":109},{"ruleId":"399","severity":1,"message":"400","line":119,"column":73,"nodeType":"401","endLine":119,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":163,"column":65,"nodeType":"401","endLine":163,"endColumn":236},{"ruleId":"399","severity":1,"message":"400","line":167,"column":73,"nodeType":"401","endLine":167,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":173,"column":99,"nodeType":"401","endLine":173,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":176,"column":99,"nodeType":"401","endLine":176,"endColumn":138},{"ruleId":"399","severity":1,"message":"400","line":179,"column":99,"nodeType":"401","endLine":179,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":182,"column":99,"nodeType":"401","endLine":182,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":185,"column":99,"nodeType":"401","endLine":185,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":188,"column":99,"nodeType":"401","endLine":188,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":191,"column":99,"nodeType":"401","endLine":191,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":194,"column":99,"nodeType":"401","endLine":194,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":197,"column":99,"nodeType":"401","endLine":197,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":200,"column":99,"nodeType":"401","endLine":200,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":205,"column":99,"nodeType":"401","endLine":205,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":208,"column":99,"nodeType":"401","endLine":208,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":211,"column":99,"nodeType":"401","endLine":211,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":214,"column":99,"nodeType":"401","endLine":214,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":217,"column":99,"nodeType":"401","endLine":217,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":220,"column":99,"nodeType":"401","endLine":220,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":223,"column":99,"nodeType":"401","endLine":223,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":226,"column":99,"nodeType":"401","endLine":226,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":229,"column":99,"nodeType":"401","endLine":229,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":232,"column":99,"nodeType":"401","endLine":232,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":237,"column":99,"nodeType":"401","endLine":237,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":240,"column":99,"nodeType":"401","endLine":240,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":243,"column":99,"nodeType":"401","endLine":243,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":246,"column":99,"nodeType":"401","endLine":246,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":249,"column":99,"nodeType":"401","endLine":249,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":252,"column":99,"nodeType":"401","endLine":252,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":255,"column":99,"nodeType":"401","endLine":255,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":258,"column":99,"nodeType":"401","endLine":258,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":261,"column":99,"nodeType":"401","endLine":261,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":264,"column":99,"nodeType":"401","endLine":264,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":269,"column":99,"nodeType":"401","endLine":269,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":272,"column":99,"nodeType":"401","endLine":272,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":275,"column":99,"nodeType":"401","endLine":275,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":278,"column":99,"nodeType":"401","endLine":278,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":281,"column":99,"nodeType":"401","endLine":281,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":284,"column":99,"nodeType":"401","endLine":284,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":287,"column":99,"nodeType":"401","endLine":287,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":290,"column":99,"nodeType":"401","endLine":290,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":293,"column":99,"nodeType":"401","endLine":293,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":296,"column":99,"nodeType":"401","endLine":296,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":301,"column":99,"nodeType":"401","endLine":301,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":304,"column":99,"nodeType":"401","endLine":304,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":307,"column":99,"nodeType":"401","endLine":307,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":310,"column":99,"nodeType":"401","endLine":310,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":313,"column":99,"nodeType":"401","endLine":313,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":316,"column":99,"nodeType":"401","endLine":316,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":319,"column":99,"nodeType":"401","endLine":319,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":322,"column":99,"nodeType":"401","endLine":322,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":325,"column":99,"nodeType":"401","endLine":325,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":328,"column":99,"nodeType":"401","endLine":328,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":333,"column":99,"nodeType":"401","endLine":333,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":336,"column":99,"nodeType":"401","endLine":336,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":339,"column":99,"nodeType":"401","endLine":339,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":342,"column":99,"nodeType":"401","endLine":342,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":345,"column":99,"nodeType":"401","endLine":345,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":348,"column":99,"nodeType":"401","endLine":348,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":351,"column":99,"nodeType":"401","endLine":351,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":354,"column":99,"nodeType":"401","endLine":354,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":357,"column":99,"nodeType":"401","endLine":357,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":360,"column":99,"nodeType":"401","endLine":360,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":365,"column":99,"nodeType":"401","endLine":365,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":368,"column":99,"nodeType":"401","endLine":368,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":371,"column":99,"nodeType":"401","endLine":371,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":374,"column":99,"nodeType":"401","endLine":374,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":377,"column":99,"nodeType":"401","endLine":377,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":380,"column":99,"nodeType":"401","endLine":380,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":383,"column":99,"nodeType":"401","endLine":383,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":386,"column":99,"nodeType":"401","endLine":386,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":389,"column":99,"nodeType":"401","endLine":389,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":392,"column":99,"nodeType":"401","endLine":392,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":405,"column":65,"nodeType":"401","endLine":405,"endColumn":248},{"ruleId":"399","severity":1,"message":"400","line":409,"column":73,"nodeType":"401","endLine":409,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":415,"column":99,"nodeType":"401","endLine":415,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":418,"column":99,"nodeType":"401","endLine":418,"endColumn":138},{"ruleId":"399","severity":1,"message":"400","line":421,"column":99,"nodeType":"401","endLine":421,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":424,"column":99,"nodeType":"401","endLine":424,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":427,"column":99,"nodeType":"401","endLine":427,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":430,"column":99,"nodeType":"401","endLine":430,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":433,"column":99,"nodeType":"401","endLine":433,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":436,"column":99,"nodeType":"401","endLine":436,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":439,"column":99,"nodeType":"401","endLine":439,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":442,"column":99,"nodeType":"401","endLine":442,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":447,"column":99,"nodeType":"401","endLine":447,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":450,"column":99,"nodeType":"401","endLine":450,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":453,"column":99,"nodeType":"401","endLine":453,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":456,"column":99,"nodeType":"401","endLine":456,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":459,"column":99,"nodeType":"401","endLine":459,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":462,"column":99,"nodeType":"401","endLine":462,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":465,"column":99,"nodeType":"401","endLine":465,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":468,"column":99,"nodeType":"401","endLine":468,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":471,"column":99,"nodeType":"401","endLine":471,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":474,"column":99,"nodeType":"401","endLine":474,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":479,"column":99,"nodeType":"401","endLine":479,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":482,"column":99,"nodeType":"401","endLine":482,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":485,"column":99,"nodeType":"401","endLine":485,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":488,"column":99,"nodeType":"401","endLine":488,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":491,"column":99,"nodeType":"401","endLine":491,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":494,"column":99,"nodeType":"401","endLine":494,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":497,"column":99,"nodeType":"401","endLine":497,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":500,"column":99,"nodeType":"401","endLine":500,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":503,"column":99,"nodeType":"401","endLine":503,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":506,"column":99,"nodeType":"401","endLine":506,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":511,"column":99,"nodeType":"401","endLine":511,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":514,"column":99,"nodeType":"401","endLine":514,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":517,"column":99,"nodeType":"401","endLine":517,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":520,"column":99,"nodeType":"401","endLine":520,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":523,"column":99,"nodeType":"401","endLine":523,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":526,"column":99,"nodeType":"401","endLine":526,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":529,"column":99,"nodeType":"401","endLine":529,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":532,"column":99,"nodeType":"401","endLine":532,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":535,"column":99,"nodeType":"401","endLine":535,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":538,"column":99,"nodeType":"401","endLine":538,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":543,"column":99,"nodeType":"401","endLine":543,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":546,"column":99,"nodeType":"401","endLine":546,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":549,"column":99,"nodeType":"401","endLine":549,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":552,"column":99,"nodeType":"401","endLine":552,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":555,"column":99,"nodeType":"401","endLine":555,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":558,"column":99,"nodeType":"401","endLine":558,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":561,"column":99,"nodeType":"401","endLine":561,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":564,"column":99,"nodeType":"401","endLine":564,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":567,"column":99,"nodeType":"401","endLine":567,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":570,"column":99,"nodeType":"401","endLine":570,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":575,"column":99,"nodeType":"401","endLine":575,"endColumn":144},{"ruleId":"399","severity":1,"message":"400","line":578,"column":99,"nodeType":"401","endLine":578,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":581,"column":99,"nodeType":"401","endLine":581,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":584,"column":99,"nodeType":"401","endLine":584,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":587,"column":99,"nodeType":"401","endLine":587,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":590,"column":99,"nodeType":"401","endLine":590,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":593,"column":99,"nodeType":"401","endLine":593,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":596,"column":99,"nodeType":"401","endLine":596,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":599,"column":99,"nodeType":"401","endLine":599,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":602,"column":99,"nodeType":"401","endLine":602,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":607,"column":99,"nodeType":"401","endLine":607,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":610,"column":99,"nodeType":"401","endLine":610,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":613,"column":99,"nodeType":"401","endLine":613,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":616,"column":99,"nodeType":"401","endLine":616,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":619,"column":99,"nodeType":"401","endLine":619,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":622,"column":99,"nodeType":"401","endLine":622,"endColumn":141},{"ruleId":"399","severity":1,"message":"400","line":625,"column":99,"nodeType":"401","endLine":625,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":628,"column":99,"nodeType":"401","endLine":628,"endColumn":142},{"ruleId":"399","severity":1,"message":"400","line":631,"column":99,"nodeType":"401","endLine":631,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":634,"column":99,"nodeType":"401","endLine":634,"endColumn":143},{"ruleId":"399","severity":1,"message":"400","line":650,"column":73,"nodeType":"401","endLine":650,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":739,"column":97,"nodeType":"401","endLine":739,"endColumn":157},{"ruleId":"399","severity":1,"message":"400","line":743,"column":105,"nodeType":"401","endLine":743,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":749,"column":131,"nodeType":"401","endLine":749,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":752,"column":131,"nodeType":"401","endLine":752,"endColumn":170},{"ruleId":"399","severity":1,"message":"400","line":755,"column":131,"nodeType":"401","endLine":755,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":758,"column":131,"nodeType":"401","endLine":758,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":761,"column":131,"nodeType":"401","endLine":761,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":764,"column":131,"nodeType":"401","endLine":764,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":767,"column":131,"nodeType":"401","endLine":767,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":770,"column":131,"nodeType":"401","endLine":770,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":773,"column":131,"nodeType":"401","endLine":773,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":776,"column":131,"nodeType":"401","endLine":776,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":781,"column":131,"nodeType":"401","endLine":781,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":784,"column":131,"nodeType":"401","endLine":784,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":787,"column":131,"nodeType":"401","endLine":787,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":790,"column":131,"nodeType":"401","endLine":790,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":793,"column":131,"nodeType":"401","endLine":793,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":796,"column":131,"nodeType":"401","endLine":796,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":799,"column":131,"nodeType":"401","endLine":799,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":802,"column":131,"nodeType":"401","endLine":802,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":805,"column":131,"nodeType":"401","endLine":805,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":808,"column":131,"nodeType":"401","endLine":808,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":813,"column":131,"nodeType":"401","endLine":813,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":816,"column":131,"nodeType":"401","endLine":816,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":819,"column":131,"nodeType":"401","endLine":819,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":822,"column":131,"nodeType":"401","endLine":822,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":825,"column":131,"nodeType":"401","endLine":825,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":828,"column":131,"nodeType":"401","endLine":828,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":831,"column":131,"nodeType":"401","endLine":831,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":834,"column":131,"nodeType":"401","endLine":834,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":837,"column":131,"nodeType":"401","endLine":837,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":840,"column":131,"nodeType":"401","endLine":840,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":845,"column":131,"nodeType":"401","endLine":845,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":848,"column":131,"nodeType":"401","endLine":848,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":851,"column":131,"nodeType":"401","endLine":851,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":854,"column":131,"nodeType":"401","endLine":854,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":857,"column":131,"nodeType":"401","endLine":857,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":860,"column":131,"nodeType":"401","endLine":860,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":863,"column":131,"nodeType":"401","endLine":863,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":866,"column":131,"nodeType":"401","endLine":866,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":869,"column":131,"nodeType":"401","endLine":869,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":872,"column":131,"nodeType":"401","endLine":872,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":877,"column":131,"nodeType":"401","endLine":877,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":880,"column":131,"nodeType":"401","endLine":880,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":883,"column":131,"nodeType":"401","endLine":883,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":886,"column":131,"nodeType":"401","endLine":886,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":889,"column":131,"nodeType":"401","endLine":889,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":892,"column":131,"nodeType":"401","endLine":892,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":895,"column":131,"nodeType":"401","endLine":895,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":898,"column":131,"nodeType":"401","endLine":898,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":901,"column":131,"nodeType":"401","endLine":901,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":904,"column":131,"nodeType":"401","endLine":904,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":909,"column":131,"nodeType":"401","endLine":909,"endColumn":176},{"ruleId":"399","severity":1,"message":"400","line":912,"column":131,"nodeType":"401","endLine":912,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":915,"column":131,"nodeType":"401","endLine":915,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":918,"column":131,"nodeType":"401","endLine":918,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":921,"column":131,"nodeType":"401","endLine":921,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":924,"column":131,"nodeType":"401","endLine":924,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":927,"column":131,"nodeType":"401","endLine":927,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":930,"column":131,"nodeType":"401","endLine":930,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":933,"column":131,"nodeType":"401","endLine":933,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":936,"column":131,"nodeType":"401","endLine":936,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":941,"column":131,"nodeType":"401","endLine":941,"endColumn":172},{"ruleId":"399","severity":1,"message":"400","line":944,"column":131,"nodeType":"401","endLine":944,"endColumn":172},{"ruleId":"399","severity":1,"message":"400","line":947,"column":131,"nodeType":"401","endLine":947,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":950,"column":131,"nodeType":"401","endLine":950,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":953,"column":131,"nodeType":"401","endLine":953,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":956,"column":131,"nodeType":"401","endLine":956,"endColumn":173},{"ruleId":"399","severity":1,"message":"400","line":959,"column":131,"nodeType":"401","endLine":959,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":962,"column":131,"nodeType":"401","endLine":962,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":965,"column":131,"nodeType":"401","endLine":965,"endColumn":172},{"ruleId":"399","severity":1,"message":"400","line":968,"column":131,"nodeType":"401","endLine":968,"endColumn":175},{"ruleId":"399","severity":1,"message":"400","line":984,"column":105,"nodeType":"401","endLine":984,"endColumn":140},{"ruleId":"399","severity":1,"message":"400","line":987,"column":135,"nodeType":"401","endLine":987,"endColumn":161},{"ruleId":"399","severity":1,"message":"400","line":988,"column":148,"nodeType":"401","endLine":988,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":994,"column":135,"nodeType":"401","endLine":994,"endColumn":161},{"ruleId":"399","severity":1,"message":"400","line":995,"column":148,"nodeType":"401","endLine":995,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":1001,"column":135,"nodeType":"401","endLine":1001,"endColumn":161},{"ruleId":"399","severity":1,"message":"400","line":1002,"column":148,"nodeType":"401","endLine":1002,"endColumn":174},{"ruleId":"399","severity":1,"message":"400","line":1008,"column":135,"nodeType":"401","endLine":1008,"endColumn":161},{"ruleId":"399","severity":1,"message":"400","line":1009,"column":169,"nodeType":"401","endLine":1009,"endColumn":195},{"ruleId":"399","severity":1,"message":"400","line":1015,"column":135,"nodeType":"401","endLine":1015,"endColumn":161},{"ruleId":"399","severity":1,"message":"400","line":1016,"column":169,"nodeType":"401","endLine":1016,"endColumn":195},{"ruleId":"399","severity":1,"message":"400","line":1047,"column":73,"nodeType":"401","endLine":1047,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":1076,"column":73,"nodeType":"401","endLine":1076,"endColumn":108},{"ruleId":"399","severity":1,"message":"400","line":1121,"column":73,"nodeType":"401","endLine":1121,"endColumn":109},{"ruleId":"399","severity":1,"message":"400","line":1133,"column":80,"nodeType":"401","endLine":1133,"endColumn":102},{"ruleId":"399","severity":1,"message":"400","line":1140,"column":73,"nodeType":"401","endLine":1140,"endColumn":126},{"ruleId":"358","severity":1,"message":"389","line":2,"column":15,"nodeType":"360","messageId":"361","endLine":2,"endColumn":22},"no-unused-vars","'axiosInterceptor' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-dupe-keys","Duplicate key 'pageData'.","ObjectExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["402"],"no-negated-in-lhs",["403"],["402"],["403"],"'styles' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["404","405"],["406","407"],["402"],["403"],"'HEADERS' is defined but never used.","'keyboardEvent' is assigned a value but never used.","'cell_key' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-global-assign","no-unsafe-negation",{"messageId":"408","fix":"409","desc":"410"},{"messageId":"411","fix":"412","desc":"413"},{"messageId":"408","fix":"414","desc":"410"},{"messageId":"411","fix":"415","desc":"413"},"removeEscape",{"range":"416","text":"417"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"418","text":"419"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"420","text":"417"},{"range":"421","text":"419"},[775,776],"",[775,775],"\\",[791,792],[791,791]]